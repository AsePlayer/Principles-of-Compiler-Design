FUN: call -> string:
FUN: callThis -> string:
BLOCK START
VAR: statement -> string = 0
EQUAL: statement = done
FUN: callThis -> string:
BLOCK START
VAR: statement -> string = 0
EQUAL: statement = done
FUN: callThis -> int:
BLOCK START
VAR: statement -> int = 0
EQUAL: statement = 6
BLOCK END
FUN: callThis -> int:
BLOCK START
VAR: statement -> int = 0
EQUAL: statement = 6
BLOCK END
FUN: callThis -> int:
BLOCK START
VAR: statement -> int = 0
EQUAL: statement = 6
BLOCK END
FUN: callThis -> int:
BLOCK START
VAR: statement -> string = 0
EQUAL: statement = done
BLOCK END
FUN: callThis -> int:
BLOCK START
VAR: statement -> string = 0
EQUAL: statement = done
BLOCK END
FUN: callThis -> int:
BLOCK START
BLOCK END
FUN: callThis -> int:
BLOCK START
BLOCK END
FUN: callThis -> int:
BLOCK START
VAR: statement -> int = 0
EQUAL: statement = 6
BLOCK END
FUN: callThis -> int:
BLOCK START
VAR: statement -> int = 0
EQUAL: statement = 6
BLOCK END
FUN: callThis -> int:
BLOCK START
VAR: statement -> int = 0
EQUAL: statement = 6
BLOCK END
FUN: callThisAfter -> int:
BLOCK START
VAR: statement -> int = 0
EQUAL: statement = 6
BLOCK END
FUN: callThis -> int:
BLOCK START
VAR: statement -> int = 0
EQUAL: statement = 6
BLOCK END
