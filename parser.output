Nonterminals useless in grammar

    IfElseStmt
    $@2
    $@3
    Primary
    UnaryOp
    BinaryOp


Terminals unused in grammar

    TYPE
    ELSE


Rules useless in grammar

   63 $@2: ε

   64 $@3: ε

   65 IfElseStmt: IF LEFTPARENTHESIS Expr RIGHTPARENTHESIS $@2 Block ELSE $@3 Block

   66 Primary: ID
   67        | NUMBER
   68        | LEFTPARENTHESIS Expr RIGHTPARENTHESIS
   69        | ID LEFTBRACKET Expr RIGHTBRACKET

   70 UnaryOp: MINUS
   71        | UNARYNOT

   72 BinaryOp: PLUS
   73         | MINUS
   74         | MULTIPLY
   75         | DIVIDE
   76         | LOGICALAND
   77         | LOGICALOR


Rules useless in parser due to conflicts

   29 FunCall: ε


State 0 conflicts: 18 shift/reduce, 1 reduce/reduce
State 21 conflicts: 18 shift/reduce, 12 reduce/reduce
State 23 conflicts: 9 shift/reduce, 1 reduce/reduce
State 40 conflicts: 12 shift/reduce
State 64 conflicts: 12 shift/reduce
State 104 conflicts: 12 shift/reduce
State 107 conflicts: 18 shift/reduce, 1 reduce/reduce
State 113 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: FunDecl
    5     | VarDecl
    6     | StmtList
    7     | IfStmt
    8     | WhileStmt

    9 StmtList: ε
   10         | Stmt StmtList

   11 Stmt: SEMICOLON
   12     | Expr SEMICOLON
   13     | ReturnStmt SEMICOLON
   14     | FunCall SEMICOLON

   15 Type: INT
   16     | FLOAT
   17     | BOOL
   18     | CHAR
   19     | STRING
   20     | VOID

   21 ParamList: ε
   22          | Type ID COMMA ParamList
   23          | Type ID

   24 Param: Type ID COMMA Param
   25      | Type ID
   26      | ε

   27 ReturnStmt: RETURN Expr

   28 FunCall: ID LEFTPARENTHESIS Param RIGHTPARENTHESIS
   29        | ε

   30 $@1: ε

   31 IfStmt: IF LEFTPARENTHESIS Expr RIGHTPARENTHESIS $@1 Block

   32 $@4: ε

   33 WhileStmt: WHILE LEFTPARENTHESIS Expr RIGHTPARENTHESIS $@4 Block

   34 $@5: ε

   35 $@6: ε

   36 FunDecl: FUN Type ID $@5 LEFTPARENTHESIS ParamList RIGHTPARENTHESIS $@6 Block

   37 Block: LEFTCURLYBRACKET DeclList StmtList RIGHCURLYBRACKET

   38 VarDecl: Type ID SEMICOLON
   39        | Type ID EQUAL Expr SEMICOLON
   40        | Type ID LEFTBRACKET Expr RIGHTBRACKET SEMICOLON

   41 Expr: NUMBER
   42     | MINUS NUMBER
   43     | LEFTPARENTHESIS Expr RIGHTPARENTHESIS
   44     | UNARYNOT Expr
   45     | ID
   46     | ID LEFTBRACKET Expr RIGHTBRACKET
   47     | ID EQUAL Expr
   48     | ID LEFTBRACKET Expr RIGHTBRACKET EQUAL Expr
   49     | Expr PLUS Expr
   50     | Expr MINUS Expr
   51     | Expr MULTIPLY Expr
   52     | Expr DIVIDE Expr
   53     | Expr EQUAL_TO Expr
   54     | Expr NOT_EQUAL_TO Expr
   55     | Expr LESS_THAN Expr
   56     | Expr LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr GREATER_THAN Expr
   58     | Expr GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr LOGICALAND Expr
   60     | Expr LOGICALOR Expr
   61     | WRITE Expr
   62     | WRITELN LEFTPARENTHESIS RIGHTPARENTHESIS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPE <string> (258)
    INT <string> (259) 15
    FLOAT <string> (260) 16
    CHAR <string> (261) 18
    BOOL <string> (262) 17
    STRING <string> (263) 19
    VOID <string> (264) 20
    ID <string> (265) 22 23 24 25 28 36 38 39 40 45 46 47 48
    RETURN <string> (266) 27
    SEMICOLON <character> (267) 11 12 13 14 38 39 40
    COMMA <character> (268) 22 24
    EQUAL <character> (269) 39 47 48
    PLUS <character> (270) 49
    MINUS <character> (271) 42 50
    MULTIPLY <character> (272) 51
    DIVIDE <character> (273) 52
    LEFTPARENTHESIS <character> (274) 28 31 33 36 43 62
    RIGHTPARENTHESIS <character> (275) 28 31 33 36 43 62
    LEFTCURLYBRACKET <character> (276) 37
    RIGHCURLYBRACKET <character> (277) 37
    LEFTBRACKET <character> (278) 40 46 48
    RIGHTBRACKET <character> (279) 40 46 48
    UNARYNOT <character> (280) 44
    LOGICALAND <string> (281) 59
    LOGICALOR <string> (282) 60
    NUMBER <string> (283) 41 42
    WRITE <string> (284) 61
    WRITELN <string> (285) 62
    FUN <string> (286) 36
    IF <string> (287) 31
    ELSE <string> (288)
    WHILE <string> (289) 33
    LESS_THAN <string> (290) 55
    GREATER_THAN <string> (291) 57
    LESS_THAN_OR_EQUAL_TO <string> (292) 56
    GREATER_THAN_OR_EQUAL_TO <string> (293) 58
    EQUAL_TO <string> (294) 53
    NOT_EQUAL_TO <string> (295) 54


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    Program <ast> (42)
        on left: 1
        on right: 0
    DeclList <ast> (43)
        on left: 2 3
        on right: 1 2 37
    Decl <ast> (44)
        on left: 4 5 6 7 8
        on right: 2 3
    StmtList <ast> (45)
        on left: 9 10
        on right: 6 10 37
    Stmt <ast> (46)
        on left: 11 12 13 14
        on right: 10
    Type <ast> (47)
        on left: 15 16 17 18 19 20
        on right: 22 23 24 25 36 38 39 40
    ParamList <ast> (48)
        on left: 21 22 23
        on right: 22 36
    Param <ast> (49)
        on left: 24 25 26
        on right: 24 28
    ReturnStmt <ast> (50)
        on left: 27
        on right: 13
    FunCall <ast> (51)
        on left: 28 29
        on right: 14
    IfStmt <ast> (52)
        on left: 31
        on right: 7
    $@1 (53)
        on left: 30
        on right: 31
    WhileStmt <ast> (54)
        on left: 33
        on right: 8
    $@4 (55)
        on left: 32
        on right: 33
    FunDecl <ast> (56)
        on left: 36
        on right: 4
    $@5 (57)
        on left: 34
        on right: 36
    $@6 (58)
        on left: 35
        on right: 36
    Block <ast> (59)
        on left: 37
        on right: 31 33 36
    VarDecl <ast> (60)
        on left: 38 39 40
        on right: 5
    Expr <ast> (61)
        on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
        on right: 12 27 31 33 39 40 43 44 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61


State 0

    0 $accept: • Program $end

    INT              shift, and go to state 1
    FLOAT            shift, and go to state 2
    CHAR             shift, and go to state 3
    BOOL             shift, and go to state 4
    STRING           shift, and go to state 5
    VOID             shift, and go to state 6
    ID               shift, and go to state 7
    RETURN           shift, and go to state 8
    SEMICOLON        shift, and go to state 9
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15
    FUN              shift, and go to state 16
    IF               shift, and go to state 17
    WHILE            shift, and go to state 18

    INT              [reduce using rule 9 (StmtList)]
    FLOAT            [reduce using rule 9 (StmtList)]
    CHAR             [reduce using rule 9 (StmtList)]
    BOOL             [reduce using rule 9 (StmtList)]
    STRING           [reduce using rule 9 (StmtList)]
    VOID             [reduce using rule 9 (StmtList)]
    ID               [reduce using rule 9 (StmtList)]
    RETURN           [reduce using rule 9 (StmtList)]
    SEMICOLON        [reduce using rule 9 (StmtList)]
    SEMICOLON        [reduce using rule 29 (FunCall)]
    MINUS            [reduce using rule 9 (StmtList)]
    LEFTPARENTHESIS  [reduce using rule 9 (StmtList)]
    UNARYNOT         [reduce using rule 9 (StmtList)]
    NUMBER           [reduce using rule 9 (StmtList)]
    WRITE            [reduce using rule 9 (StmtList)]
    WRITELN          [reduce using rule 9 (StmtList)]
    FUN              [reduce using rule 9 (StmtList)]
    IF               [reduce using rule 9 (StmtList)]
    WHILE            [reduce using rule 9 (StmtList)]
    $default         reduce using rule 9 (StmtList)

    Program     go to state 19
    DeclList    go to state 20
    Decl        go to state 21
    StmtList    go to state 22
    Stmt        go to state 23
    Type        go to state 24
    ReturnStmt  go to state 25
    FunCall     go to state 26
    IfStmt      go to state 27
    WhileStmt   go to state 28
    FunDecl     go to state 29
    VarDecl     go to state 30
    Expr        go to state 31


State 1

   15 Type: INT •

    $default  reduce using rule 15 (Type)


State 2

   16 Type: FLOAT •

    $default  reduce using rule 16 (Type)


State 3

   18 Type: CHAR •

    $default  reduce using rule 18 (Type)


State 4

   17 Type: BOOL •

    $default  reduce using rule 17 (Type)


State 5

   19 Type: STRING •

    $default  reduce using rule 19 (Type)


State 6

   20 Type: VOID •

    $default  reduce using rule 20 (Type)


State 7

   28 FunCall: ID • LEFTPARENTHESIS Param RIGHTPARENTHESIS
   45 Expr: ID •
   46     | ID • LEFTBRACKET Expr RIGHTBRACKET
   47     | ID • EQUAL Expr
   48     | ID • LEFTBRACKET Expr RIGHTBRACKET EQUAL Expr

    EQUAL            shift, and go to state 32
    LEFTPARENTHESIS  shift, and go to state 33
    LEFTBRACKET      shift, and go to state 34

    $default  reduce using rule 45 (Expr)


State 8

   27 ReturnStmt: RETURN • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 36


State 9

   11 Stmt: SEMICOLON •

    $default  reduce using rule 11 (Stmt)


State 10

   42 Expr: MINUS • NUMBER

    NUMBER  shift, and go to state 37


State 11

   43 Expr: LEFTPARENTHESIS • Expr RIGHTPARENTHESIS

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 38


State 12

   44 Expr: UNARYNOT • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 39


State 13

   41 Expr: NUMBER •

    $default  reduce using rule 41 (Expr)


State 14

   61 Expr: WRITE • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 40


State 15

   62 Expr: WRITELN • LEFTPARENTHESIS RIGHTPARENTHESIS

    LEFTPARENTHESIS  shift, and go to state 41


State 16

   36 FunDecl: FUN • Type ID $@5 LEFTPARENTHESIS ParamList RIGHTPARENTHESIS $@6 Block

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    VOID    shift, and go to state 6

    Type  go to state 42


State 17

   31 IfStmt: IF • LEFTPARENTHESIS Expr RIGHTPARENTHESIS $@1 Block

    LEFTPARENTHESIS  shift, and go to state 43


State 18

   33 WhileStmt: WHILE • LEFTPARENTHESIS Expr RIGHTPARENTHESIS $@4 Block

    LEFTPARENTHESIS  shift, and go to state 44


State 19

    0 $accept: Program • $end

    $end  shift, and go to state 45


State 20

    1 Program: DeclList •

    $default  reduce using rule 1 (Program)


State 21

    2 DeclList: Decl • DeclList
    3         | Decl •

    INT              shift, and go to state 1
    FLOAT            shift, and go to state 2
    CHAR             shift, and go to state 3
    BOOL             shift, and go to state 4
    STRING           shift, and go to state 5
    VOID             shift, and go to state 6
    ID               shift, and go to state 7
    RETURN           shift, and go to state 8
    SEMICOLON        shift, and go to state 9
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15
    FUN              shift, and go to state 16
    IF               shift, and go to state 17
    WHILE            shift, and go to state 18

    $end              reduce using rule 3 (DeclList)
    $end              [reduce using rule 9 (StmtList)]
    INT               [reduce using rule 9 (StmtList)]
    FLOAT             [reduce using rule 9 (StmtList)]
    CHAR              [reduce using rule 9 (StmtList)]
    BOOL              [reduce using rule 9 (StmtList)]
    STRING            [reduce using rule 9 (StmtList)]
    VOID              [reduce using rule 9 (StmtList)]
    ID                [reduce using rule 3 (DeclList)]
    ID                [reduce using rule 9 (StmtList)]
    RETURN            [reduce using rule 3 (DeclList)]
    RETURN            [reduce using rule 9 (StmtList)]
    SEMICOLON         [reduce using rule 3 (DeclList)]
    SEMICOLON         [reduce using rule 9 (StmtList)]
    SEMICOLON         [reduce using rule 29 (FunCall)]
    MINUS             [reduce using rule 3 (DeclList)]
    MINUS             [reduce using rule 9 (StmtList)]
    LEFTPARENTHESIS   [reduce using rule 3 (DeclList)]
    LEFTPARENTHESIS   [reduce using rule 9 (StmtList)]
    RIGHCURLYBRACKET  reduce using rule 3 (DeclList)
    RIGHCURLYBRACKET  [reduce using rule 9 (StmtList)]
    UNARYNOT          [reduce using rule 3 (DeclList)]
    UNARYNOT          [reduce using rule 9 (StmtList)]
    NUMBER            [reduce using rule 3 (DeclList)]
    NUMBER            [reduce using rule 9 (StmtList)]
    WRITE             [reduce using rule 3 (DeclList)]
    WRITE             [reduce using rule 9 (StmtList)]
    WRITELN           [reduce using rule 3 (DeclList)]
    WRITELN           [reduce using rule 9 (StmtList)]
    FUN               [reduce using rule 9 (StmtList)]
    IF                [reduce using rule 9 (StmtList)]
    WHILE             [reduce using rule 9 (StmtList)]
    $default          reduce using rule 3 (DeclList)

    DeclList    go to state 46
    Decl        go to state 21
    StmtList    go to state 22
    Stmt        go to state 23
    Type        go to state 24
    ReturnStmt  go to state 25
    FunCall     go to state 26
    IfStmt      go to state 27
    WhileStmt   go to state 28
    FunDecl     go to state 29
    VarDecl     go to state 30
    Expr        go to state 31


State 22

    6 Decl: StmtList •

    $default  reduce using rule 6 (Decl)


State 23

   10 StmtList: Stmt • StmtList

    ID               shift, and go to state 7
    RETURN           shift, and go to state 8
    SEMICOLON        shift, and go to state 9
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    ID               [reduce using rule 9 (StmtList)]
    RETURN           [reduce using rule 9 (StmtList)]
    SEMICOLON        [reduce using rule 9 (StmtList)]
    SEMICOLON        [reduce using rule 29 (FunCall)]
    MINUS            [reduce using rule 9 (StmtList)]
    LEFTPARENTHESIS  [reduce using rule 9 (StmtList)]
    UNARYNOT         [reduce using rule 9 (StmtList)]
    NUMBER           [reduce using rule 9 (StmtList)]
    WRITE            [reduce using rule 9 (StmtList)]
    WRITELN          [reduce using rule 9 (StmtList)]
    $default         reduce using rule 9 (StmtList)

    StmtList    go to state 47
    Stmt        go to state 23
    ReturnStmt  go to state 25
    FunCall     go to state 26
    Expr        go to state 31


State 24

   38 VarDecl: Type • ID SEMICOLON
   39        | Type • ID EQUAL Expr SEMICOLON
   40        | Type • ID LEFTBRACKET Expr RIGHTBRACKET SEMICOLON

    ID  shift, and go to state 48


State 25

   13 Stmt: ReturnStmt • SEMICOLON

    SEMICOLON  shift, and go to state 49


State 26

   14 Stmt: FunCall • SEMICOLON

    SEMICOLON  shift, and go to state 50


State 27

    7 Decl: IfStmt •

    $default  reduce using rule 7 (Decl)


State 28

    8 Decl: WhileStmt •

    $default  reduce using rule 8 (Decl)


State 29

    4 Decl: FunDecl •

    $default  reduce using rule 4 (Decl)


State 30

    5 Decl: VarDecl •

    $default  reduce using rule 5 (Decl)


State 31

   12 Stmt: Expr • SEMICOLON
   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    SEMICOLON                 shift, and go to state 51
    PLUS                      shift, and go to state 52
    MINUS                     shift, and go to state 53
    MULTIPLY                  shift, and go to state 54
    DIVIDE                    shift, and go to state 55
    LOGICALAND                shift, and go to state 56
    LOGICALOR                 shift, and go to state 57
    LESS_THAN                 shift, and go to state 58
    GREATER_THAN              shift, and go to state 59
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 60
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 61
    EQUAL_TO                  shift, and go to state 62
    NOT_EQUAL_TO              shift, and go to state 63


State 32

   47 Expr: ID EQUAL • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 64


State 33

   28 FunCall: ID LEFTPARENTHESIS • Param RIGHTPARENTHESIS

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 26 (Param)

    Type   go to state 65
    Param  go to state 66


State 34

   46 Expr: ID LEFTBRACKET • Expr RIGHTBRACKET
   48     | ID LEFTBRACKET • Expr RIGHTBRACKET EQUAL Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 67


State 35

   45 Expr: ID •
   46     | ID • LEFTBRACKET Expr RIGHTBRACKET
   47     | ID • EQUAL Expr
   48     | ID • LEFTBRACKET Expr RIGHTBRACKET EQUAL Expr

    EQUAL        shift, and go to state 32
    LEFTBRACKET  shift, and go to state 34

    $default  reduce using rule 45 (Expr)


State 36

   27 ReturnStmt: RETURN Expr •
   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    PLUS                      shift, and go to state 52
    MINUS                     shift, and go to state 53
    MULTIPLY                  shift, and go to state 54
    DIVIDE                    shift, and go to state 55
    LOGICALAND                shift, and go to state 56
    LOGICALOR                 shift, and go to state 57
    LESS_THAN                 shift, and go to state 58
    GREATER_THAN              shift, and go to state 59
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 60
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 61
    EQUAL_TO                  shift, and go to state 62
    NOT_EQUAL_TO              shift, and go to state 63

    $default  reduce using rule 27 (ReturnStmt)


State 37

   42 Expr: MINUS NUMBER •

    $default  reduce using rule 42 (Expr)


State 38

   43 Expr: LEFTPARENTHESIS Expr • RIGHTPARENTHESIS
   49     | Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    PLUS                      shift, and go to state 52
    MINUS                     shift, and go to state 53
    MULTIPLY                  shift, and go to state 54
    DIVIDE                    shift, and go to state 55
    RIGHTPARENTHESIS          shift, and go to state 68
    LOGICALAND                shift, and go to state 56
    LOGICALOR                 shift, and go to state 57
    LESS_THAN                 shift, and go to state 58
    GREATER_THAN              shift, and go to state 59
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 60
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 61
    EQUAL_TO                  shift, and go to state 62
    NOT_EQUAL_TO              shift, and go to state 63


State 39

   44 Expr: UNARYNOT Expr •
   49     | Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    $default  reduce using rule 44 (Expr)


State 40

   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr
   61     | WRITE Expr •

    PLUS                      shift, and go to state 52
    MINUS                     shift, and go to state 53
    MULTIPLY                  shift, and go to state 54
    DIVIDE                    shift, and go to state 55
    LOGICALAND                shift, and go to state 56
    LOGICALOR                 shift, and go to state 57
    LESS_THAN                 shift, and go to state 58
    GREATER_THAN              shift, and go to state 59
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 60
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 61
    EQUAL_TO                  shift, and go to state 62
    NOT_EQUAL_TO              shift, and go to state 63

    PLUS                      [reduce using rule 61 (Expr)]
    MINUS                     [reduce using rule 61 (Expr)]
    MULTIPLY                  [reduce using rule 61 (Expr)]
    DIVIDE                    [reduce using rule 61 (Expr)]
    LOGICALAND                [reduce using rule 61 (Expr)]
    LOGICALOR                 [reduce using rule 61 (Expr)]
    LESS_THAN                 [reduce using rule 61 (Expr)]
    GREATER_THAN              [reduce using rule 61 (Expr)]
    LESS_THAN_OR_EQUAL_TO     [reduce using rule 61 (Expr)]
    GREATER_THAN_OR_EQUAL_TO  [reduce using rule 61 (Expr)]
    EQUAL_TO                  [reduce using rule 61 (Expr)]
    NOT_EQUAL_TO              [reduce using rule 61 (Expr)]
    $default                  reduce using rule 61 (Expr)


State 41

   62 Expr: WRITELN LEFTPARENTHESIS • RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 69


State 42

   36 FunDecl: FUN Type • ID $@5 LEFTPARENTHESIS ParamList RIGHTPARENTHESIS $@6 Block

    ID  shift, and go to state 70


State 43

   31 IfStmt: IF LEFTPARENTHESIS • Expr RIGHTPARENTHESIS $@1 Block

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 71


State 44

   33 WhileStmt: WHILE LEFTPARENTHESIS • Expr RIGHTPARENTHESIS $@4 Block

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 72


State 45

    0 $accept: Program $end •

    $default  accept


State 46

    2 DeclList: Decl DeclList •

    $default  reduce using rule 2 (DeclList)


State 47

   10 StmtList: Stmt StmtList •

    $default  reduce using rule 10 (StmtList)


State 48

   38 VarDecl: Type ID • SEMICOLON
   39        | Type ID • EQUAL Expr SEMICOLON
   40        | Type ID • LEFTBRACKET Expr RIGHTBRACKET SEMICOLON

    SEMICOLON    shift, and go to state 73
    EQUAL        shift, and go to state 74
    LEFTBRACKET  shift, and go to state 75


State 49

   13 Stmt: ReturnStmt SEMICOLON •

    $default  reduce using rule 13 (Stmt)


State 50

   14 Stmt: FunCall SEMICOLON •

    $default  reduce using rule 14 (Stmt)


State 51

   12 Stmt: Expr SEMICOLON •

    $default  reduce using rule 12 (Stmt)


State 52

   49 Expr: Expr PLUS • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 76


State 53

   50 Expr: Expr MINUS • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 77


State 54

   51 Expr: Expr MULTIPLY • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 78


State 55

   52 Expr: Expr DIVIDE • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 79


State 56

   59 Expr: Expr LOGICALAND • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 80


State 57

   60 Expr: Expr LOGICALOR • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 81


State 58

   55 Expr: Expr LESS_THAN • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 82


State 59

   57 Expr: Expr GREATER_THAN • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 83


State 60

   56 Expr: Expr LESS_THAN_OR_EQUAL_TO • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 84


State 61

   58 Expr: Expr GREATER_THAN_OR_EQUAL_TO • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 85


State 62

   53 Expr: Expr EQUAL_TO • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 86


State 63

   54 Expr: Expr NOT_EQUAL_TO • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 87


State 64

   47 Expr: ID EQUAL Expr •
   49     | Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    PLUS                      shift, and go to state 52
    MINUS                     shift, and go to state 53
    MULTIPLY                  shift, and go to state 54
    DIVIDE                    shift, and go to state 55
    LOGICALAND                shift, and go to state 56
    LOGICALOR                 shift, and go to state 57
    LESS_THAN                 shift, and go to state 58
    GREATER_THAN              shift, and go to state 59
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 60
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 61
    EQUAL_TO                  shift, and go to state 62
    NOT_EQUAL_TO              shift, and go to state 63

    PLUS                      [reduce using rule 47 (Expr)]
    MINUS                     [reduce using rule 47 (Expr)]
    MULTIPLY                  [reduce using rule 47 (Expr)]
    DIVIDE                    [reduce using rule 47 (Expr)]
    LOGICALAND                [reduce using rule 47 (Expr)]
    LOGICALOR                 [reduce using rule 47 (Expr)]
    LESS_THAN                 [reduce using rule 47 (Expr)]
    GREATER_THAN              [reduce using rule 47 (Expr)]
    LESS_THAN_OR_EQUAL_TO     [reduce using rule 47 (Expr)]
    GREATER_THAN_OR_EQUAL_TO  [reduce using rule 47 (Expr)]
    EQUAL_TO                  [reduce using rule 47 (Expr)]
    NOT_EQUAL_TO              [reduce using rule 47 (Expr)]
    $default                  reduce using rule 47 (Expr)


State 65

   24 Param: Type • ID COMMA Param
   25      | Type • ID

    ID  shift, and go to state 88


State 66

   28 FunCall: ID LEFTPARENTHESIS Param • RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 89


State 67

   46 Expr: ID LEFTBRACKET Expr • RIGHTBRACKET
   48     | ID LEFTBRACKET Expr • RIGHTBRACKET EQUAL Expr
   49     | Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    PLUS                      shift, and go to state 52
    MINUS                     shift, and go to state 53
    MULTIPLY                  shift, and go to state 54
    DIVIDE                    shift, and go to state 55
    RIGHTBRACKET              shift, and go to state 90
    LOGICALAND                shift, and go to state 56
    LOGICALOR                 shift, and go to state 57
    LESS_THAN                 shift, and go to state 58
    GREATER_THAN              shift, and go to state 59
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 60
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 61
    EQUAL_TO                  shift, and go to state 62
    NOT_EQUAL_TO              shift, and go to state 63


State 68

   43 Expr: LEFTPARENTHESIS Expr RIGHTPARENTHESIS •

    $default  reduce using rule 43 (Expr)


State 69

   62 Expr: WRITELN LEFTPARENTHESIS RIGHTPARENTHESIS •

    $default  reduce using rule 62 (Expr)


State 70

   36 FunDecl: FUN Type ID • $@5 LEFTPARENTHESIS ParamList RIGHTPARENTHESIS $@6 Block

    $default  reduce using rule 34 ($@5)

    $@5  go to state 91


State 71

   31 IfStmt: IF LEFTPARENTHESIS Expr • RIGHTPARENTHESIS $@1 Block
   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    PLUS                      shift, and go to state 52
    MINUS                     shift, and go to state 53
    MULTIPLY                  shift, and go to state 54
    DIVIDE                    shift, and go to state 55
    RIGHTPARENTHESIS          shift, and go to state 92
    LOGICALAND                shift, and go to state 56
    LOGICALOR                 shift, and go to state 57
    LESS_THAN                 shift, and go to state 58
    GREATER_THAN              shift, and go to state 59
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 60
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 61
    EQUAL_TO                  shift, and go to state 62
    NOT_EQUAL_TO              shift, and go to state 63


State 72

   33 WhileStmt: WHILE LEFTPARENTHESIS Expr • RIGHTPARENTHESIS $@4 Block
   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    PLUS                      shift, and go to state 52
    MINUS                     shift, and go to state 53
    MULTIPLY                  shift, and go to state 54
    DIVIDE                    shift, and go to state 55
    RIGHTPARENTHESIS          shift, and go to state 93
    LOGICALAND                shift, and go to state 56
    LOGICALOR                 shift, and go to state 57
    LESS_THAN                 shift, and go to state 58
    GREATER_THAN              shift, and go to state 59
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 60
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 61
    EQUAL_TO                  shift, and go to state 62
    NOT_EQUAL_TO              shift, and go to state 63


State 73

   38 VarDecl: Type ID SEMICOLON •

    $default  reduce using rule 38 (VarDecl)


State 74

   39 VarDecl: Type ID EQUAL • Expr SEMICOLON

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 94


State 75

   40 VarDecl: Type ID LEFTBRACKET • Expr RIGHTBRACKET SEMICOLON

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 95


State 76

   49 Expr: Expr • PLUS Expr
   49     | Expr PLUS Expr •
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    MULTIPLY  shift, and go to state 54
    DIVIDE    shift, and go to state 55

    $default  reduce using rule 49 (Expr)


State 77

   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   50     | Expr MINUS Expr •
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    MULTIPLY  shift, and go to state 54
    DIVIDE    shift, and go to state 55

    $default  reduce using rule 50 (Expr)


State 78

   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   51     | Expr MULTIPLY Expr •
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    $default  reduce using rule 51 (Expr)


State 79

   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   52     | Expr DIVIDE Expr •
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    $default  reduce using rule 52 (Expr)


State 80

   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   59     | Expr LOGICALAND Expr •
   60     | Expr • LOGICALOR Expr

    PLUS                      shift, and go to state 52
    MINUS                     shift, and go to state 53
    MULTIPLY                  shift, and go to state 54
    DIVIDE                    shift, and go to state 55
    LESS_THAN                 shift, and go to state 58
    GREATER_THAN              shift, and go to state 59
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 60
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 61
    EQUAL_TO                  shift, and go to state 62
    NOT_EQUAL_TO              shift, and go to state 63

    $default  reduce using rule 59 (Expr)


State 81

   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr
   60     | Expr LOGICALOR Expr •

    PLUS                      shift, and go to state 52
    MINUS                     shift, and go to state 53
    MULTIPLY                  shift, and go to state 54
    DIVIDE                    shift, and go to state 55
    LOGICALAND                shift, and go to state 56
    LESS_THAN                 shift, and go to state 58
    GREATER_THAN              shift, and go to state 59
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 60
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 61
    EQUAL_TO                  shift, and go to state 62
    NOT_EQUAL_TO              shift, and go to state 63

    $default  reduce using rule 60 (Expr)


State 82

   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   55     | Expr LESS_THAN Expr •
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    MULTIPLY  shift, and go to state 54
    DIVIDE    shift, and go to state 55

    $default  reduce using rule 55 (Expr)


State 83

   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   57     | Expr GREATER_THAN Expr •
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    MULTIPLY  shift, and go to state 54
    DIVIDE    shift, and go to state 55

    $default  reduce using rule 57 (Expr)


State 84

   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   56     | Expr LESS_THAN_OR_EQUAL_TO Expr •
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    MULTIPLY  shift, and go to state 54
    DIVIDE    shift, and go to state 55

    $default  reduce using rule 56 (Expr)


State 85

   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   58     | Expr GREATER_THAN_OR_EQUAL_TO Expr •
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    MULTIPLY  shift, and go to state 54
    DIVIDE    shift, and go to state 55

    $default  reduce using rule 58 (Expr)


State 86

   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   53     | Expr EQUAL_TO Expr •
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    MULTIPLY  shift, and go to state 54
    DIVIDE    shift, and go to state 55

    $default  reduce using rule 53 (Expr)


State 87

   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   54     | Expr NOT_EQUAL_TO Expr •
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    PLUS      shift, and go to state 52
    MINUS     shift, and go to state 53
    MULTIPLY  shift, and go to state 54
    DIVIDE    shift, and go to state 55

    $default  reduce using rule 54 (Expr)


State 88

   24 Param: Type ID • COMMA Param
   25      | Type ID •

    COMMA  shift, and go to state 96

    $default  reduce using rule 25 (Param)


State 89

   28 FunCall: ID LEFTPARENTHESIS Param RIGHTPARENTHESIS •

    $default  reduce using rule 28 (FunCall)


State 90

   46 Expr: ID LEFTBRACKET Expr RIGHTBRACKET •
   48     | ID LEFTBRACKET Expr RIGHTBRACKET • EQUAL Expr

    EQUAL  shift, and go to state 97

    $default  reduce using rule 46 (Expr)


State 91

   36 FunDecl: FUN Type ID $@5 • LEFTPARENTHESIS ParamList RIGHTPARENTHESIS $@6 Block

    LEFTPARENTHESIS  shift, and go to state 98


State 92

   31 IfStmt: IF LEFTPARENTHESIS Expr RIGHTPARENTHESIS • $@1 Block

    $default  reduce using rule 30 ($@1)

    $@1  go to state 99


State 93

   33 WhileStmt: WHILE LEFTPARENTHESIS Expr RIGHTPARENTHESIS • $@4 Block

    $default  reduce using rule 32 ($@4)

    $@4  go to state 100


State 94

   39 VarDecl: Type ID EQUAL Expr • SEMICOLON
   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    SEMICOLON                 shift, and go to state 101
    PLUS                      shift, and go to state 52
    MINUS                     shift, and go to state 53
    MULTIPLY                  shift, and go to state 54
    DIVIDE                    shift, and go to state 55
    LOGICALAND                shift, and go to state 56
    LOGICALOR                 shift, and go to state 57
    LESS_THAN                 shift, and go to state 58
    GREATER_THAN              shift, and go to state 59
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 60
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 61
    EQUAL_TO                  shift, and go to state 62
    NOT_EQUAL_TO              shift, and go to state 63


State 95

   40 VarDecl: Type ID LEFTBRACKET Expr • RIGHTBRACKET SEMICOLON
   49 Expr: Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    PLUS                      shift, and go to state 52
    MINUS                     shift, and go to state 53
    MULTIPLY                  shift, and go to state 54
    DIVIDE                    shift, and go to state 55
    RIGHTBRACKET              shift, and go to state 102
    LOGICALAND                shift, and go to state 56
    LOGICALOR                 shift, and go to state 57
    LESS_THAN                 shift, and go to state 58
    GREATER_THAN              shift, and go to state 59
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 60
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 61
    EQUAL_TO                  shift, and go to state 62
    NOT_EQUAL_TO              shift, and go to state 63


State 96

   24 Param: Type ID COMMA • Param

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 26 (Param)

    Type   go to state 65
    Param  go to state 103


State 97

   48 Expr: ID LEFTBRACKET Expr RIGHTBRACKET EQUAL • Expr

    ID               shift, and go to state 35
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    Expr  go to state 104


State 98

   36 FunDecl: FUN Type ID $@5 LEFTPARENTHESIS • ParamList RIGHTPARENTHESIS $@6 Block

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 21 (ParamList)

    Type       go to state 105
    ParamList  go to state 106


State 99

   31 IfStmt: IF LEFTPARENTHESIS Expr RIGHTPARENTHESIS $@1 • Block

    LEFTCURLYBRACKET  shift, and go to state 107

    Block  go to state 108


State 100

   33 WhileStmt: WHILE LEFTPARENTHESIS Expr RIGHTPARENTHESIS $@4 • Block

    LEFTCURLYBRACKET  shift, and go to state 107

    Block  go to state 109


State 101

   39 VarDecl: Type ID EQUAL Expr SEMICOLON •

    $default  reduce using rule 39 (VarDecl)


State 102

   40 VarDecl: Type ID LEFTBRACKET Expr RIGHTBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 110


State 103

   24 Param: Type ID COMMA Param •

    $default  reduce using rule 24 (Param)


State 104

   48 Expr: ID LEFTBRACKET Expr RIGHTBRACKET EQUAL Expr •
   49     | Expr • PLUS Expr
   50     | Expr • MINUS Expr
   51     | Expr • MULTIPLY Expr
   52     | Expr • DIVIDE Expr
   53     | Expr • EQUAL_TO Expr
   54     | Expr • NOT_EQUAL_TO Expr
   55     | Expr • LESS_THAN Expr
   56     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   57     | Expr • GREATER_THAN Expr
   58     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   59     | Expr • LOGICALAND Expr
   60     | Expr • LOGICALOR Expr

    PLUS                      shift, and go to state 52
    MINUS                     shift, and go to state 53
    MULTIPLY                  shift, and go to state 54
    DIVIDE                    shift, and go to state 55
    LOGICALAND                shift, and go to state 56
    LOGICALOR                 shift, and go to state 57
    LESS_THAN                 shift, and go to state 58
    GREATER_THAN              shift, and go to state 59
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 60
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 61
    EQUAL_TO                  shift, and go to state 62
    NOT_EQUAL_TO              shift, and go to state 63

    PLUS                      [reduce using rule 48 (Expr)]
    MINUS                     [reduce using rule 48 (Expr)]
    MULTIPLY                  [reduce using rule 48 (Expr)]
    DIVIDE                    [reduce using rule 48 (Expr)]
    LOGICALAND                [reduce using rule 48 (Expr)]
    LOGICALOR                 [reduce using rule 48 (Expr)]
    LESS_THAN                 [reduce using rule 48 (Expr)]
    GREATER_THAN              [reduce using rule 48 (Expr)]
    LESS_THAN_OR_EQUAL_TO     [reduce using rule 48 (Expr)]
    GREATER_THAN_OR_EQUAL_TO  [reduce using rule 48 (Expr)]
    EQUAL_TO                  [reduce using rule 48 (Expr)]
    NOT_EQUAL_TO              [reduce using rule 48 (Expr)]
    $default                  reduce using rule 48 (Expr)


State 105

   22 ParamList: Type • ID COMMA ParamList
   23          | Type • ID

    ID  shift, and go to state 111


State 106

   36 FunDecl: FUN Type ID $@5 LEFTPARENTHESIS ParamList • RIGHTPARENTHESIS $@6 Block

    RIGHTPARENTHESIS  shift, and go to state 112


State 107

   37 Block: LEFTCURLYBRACKET • DeclList StmtList RIGHCURLYBRACKET

    INT              shift, and go to state 1
    FLOAT            shift, and go to state 2
    CHAR             shift, and go to state 3
    BOOL             shift, and go to state 4
    STRING           shift, and go to state 5
    VOID             shift, and go to state 6
    ID               shift, and go to state 7
    RETURN           shift, and go to state 8
    SEMICOLON        shift, and go to state 9
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15
    FUN              shift, and go to state 16
    IF               shift, and go to state 17
    WHILE            shift, and go to state 18

    INT              [reduce using rule 9 (StmtList)]
    FLOAT            [reduce using rule 9 (StmtList)]
    CHAR             [reduce using rule 9 (StmtList)]
    BOOL             [reduce using rule 9 (StmtList)]
    STRING           [reduce using rule 9 (StmtList)]
    VOID             [reduce using rule 9 (StmtList)]
    ID               [reduce using rule 9 (StmtList)]
    RETURN           [reduce using rule 9 (StmtList)]
    SEMICOLON        [reduce using rule 9 (StmtList)]
    SEMICOLON        [reduce using rule 29 (FunCall)]
    MINUS            [reduce using rule 9 (StmtList)]
    LEFTPARENTHESIS  [reduce using rule 9 (StmtList)]
    UNARYNOT         [reduce using rule 9 (StmtList)]
    NUMBER           [reduce using rule 9 (StmtList)]
    WRITE            [reduce using rule 9 (StmtList)]
    WRITELN          [reduce using rule 9 (StmtList)]
    FUN              [reduce using rule 9 (StmtList)]
    IF               [reduce using rule 9 (StmtList)]
    WHILE            [reduce using rule 9 (StmtList)]
    $default         reduce using rule 9 (StmtList)

    DeclList    go to state 113
    Decl        go to state 21
    StmtList    go to state 22
    Stmt        go to state 23
    Type        go to state 24
    ReturnStmt  go to state 25
    FunCall     go to state 26
    IfStmt      go to state 27
    WhileStmt   go to state 28
    FunDecl     go to state 29
    VarDecl     go to state 30
    Expr        go to state 31


State 108

   31 IfStmt: IF LEFTPARENTHESIS Expr RIGHTPARENTHESIS $@1 Block •

    $default  reduce using rule 31 (IfStmt)


State 109

   33 WhileStmt: WHILE LEFTPARENTHESIS Expr RIGHTPARENTHESIS $@4 Block •

    $default  reduce using rule 33 (WhileStmt)


State 110

   40 VarDecl: Type ID LEFTBRACKET Expr RIGHTBRACKET SEMICOLON •

    $default  reduce using rule 40 (VarDecl)


State 111

   22 ParamList: Type ID • COMMA ParamList
   23          | Type ID •

    COMMA  shift, and go to state 114

    $default  reduce using rule 23 (ParamList)


State 112

   36 FunDecl: FUN Type ID $@5 LEFTPARENTHESIS ParamList RIGHTPARENTHESIS • $@6 Block

    $default  reduce using rule 35 ($@6)

    $@6  go to state 115


State 113

   37 Block: LEFTCURLYBRACKET DeclList • StmtList RIGHCURLYBRACKET

    ID               shift, and go to state 7
    RETURN           shift, and go to state 8
    SEMICOLON        shift, and go to state 9
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    WRITE            shift, and go to state 14
    WRITELN          shift, and go to state 15

    SEMICOLON  [reduce using rule 29 (FunCall)]
    $default   reduce using rule 9 (StmtList)

    StmtList    go to state 116
    Stmt        go to state 23
    ReturnStmt  go to state 25
    FunCall     go to state 26
    Expr        go to state 31


State 114

   22 ParamList: Type ID COMMA • ParamList

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 21 (ParamList)

    Type       go to state 105
    ParamList  go to state 117


State 115

   36 FunDecl: FUN Type ID $@5 LEFTPARENTHESIS ParamList RIGHTPARENTHESIS $@6 • Block

    LEFTCURLYBRACKET  shift, and go to state 107

    Block  go to state 118


State 116

   37 Block: LEFTCURLYBRACKET DeclList StmtList • RIGHCURLYBRACKET

    RIGHCURLYBRACKET  shift, and go to state 119


State 117

   22 ParamList: Type ID COMMA ParamList •

    $default  reduce using rule 22 (ParamList)


State 118

   36 FunDecl: FUN Type ID $@5 LEFTPARENTHESIS ParamList RIGHTPARENTHESIS $@6 Block •

    $default  reduce using rule 36 (FunDecl)


State 119

   37 Block: LEFTCURLYBRACKET DeclList StmtList RIGHCURLYBRACKET •

    $default  reduce using rule 37 (Block)
