Nonterminals useless in grammar

    Primary
    UnaryOp
    BinaryOp


Terminals unused in grammar

    RETURN
    COMMA
    UNARYNOT
    LOGICALAND
    LOGICALOR
    WRITE


Rules useless in grammar

   22 Primary: ID
   23        | NUMBER
   24        | LEFTPARENTHESIS Expr RIGHTPARENTHESIS

   25 UnaryOp: MINUS
   26        | UNARYNOT

   27 BinaryOp: PLUS
   28         | MINUS
   29         | MULTIPLY
   30         | DIVIDE
   31         | LOGICALAND
   32         | LOGICALOR


State 0 conflicts: 6 shift/reduce
State 9 conflicts: 6 shift/reduce, 6 reduce/reduce
State 11 conflicts: 4 shift/reduce
State 28 conflicts: 4 shift/reduce
State 31 conflicts: 4 shift/reduce
State 32 conflicts: 4 shift/reduce
State 33 conflicts: 4 shift/reduce
State 34 conflicts: 4 shift/reduce
State 38 conflicts: 6 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: FunDecl
    5     | VarDecl
    6     | StmtList

    7 StmtList: ε
    8         | Stmt StmtList

    9 Stmt: SEMICOLON
   10     | Expr SEMICOLON

   11 $@1: ε

   12 FunDecl: FUN TYPE ID $@1 LEFTPARENTHESIS RIGHTPARENTHESIS Block

   13 Block: LEFTCURLYBRACKET DeclList StmtList RIGHCURLYBRACKET

   14 VarDecl: TYPE ID SEMICOLON

   15 Expr: NUMBER
   16     | ID EQUAL Expr
   17     | Expr PLUS Expr
   18     | Expr MINUS Expr
   19     | Expr MULTIPLY Expr
   20     | Expr DIVIDE Expr
   21     | LEFTPARENTHESIS Expr RIGHTPARENTHESIS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPE <string> (258) 12 14
    ID <string> (259) 12 14 16
    RETURN <string> (260)
    SEMICOLON <character> (261) 9 10 14
    COMMA <character> (262)
    EQUAL <character> (263) 16
    PLUS <character> (264) 17
    MINUS <character> (265) 18
    MULTIPLY <character> (266) 19
    DIVIDE <character> (267) 20
    LEFTPARENTHESIS <character> (268) 12 21
    RIGHTPARENTHESIS <character> (269) 12 21
    LEFTCURLYBRACKET <character> (270) 13
    RIGHCURLYBRACKET <character> (271) 13
    UNARYNOT <character> (272)
    LOGICALAND <string> (273)
    LOGICALOR <string> (274)
    NUMBER <string> (275) 15
    WRITE <string> (276)
    FUN <string> (277) 12


Nonterminals, with rules where they appear

    $accept (23)
        on left: 0
    Program <ast> (24)
        on left: 1
        on right: 0
    DeclList <ast> (25)
        on left: 2 3
        on right: 1 2 13
    Decl <ast> (26)
        on left: 4 5 6
        on right: 2 3
    StmtList <ast> (27)
        on left: 7 8
        on right: 6 8 13
    Stmt <ast> (28)
        on left: 9 10
        on right: 8
    FunDecl <ast> (29)
        on left: 12
        on right: 4
    $@1 (30)
        on left: 11
        on right: 12
    Block (31)
        on left: 13
        on right: 12
    VarDecl <ast> (32)
        on left: 14
        on right: 5
    Expr <ast> (33)
        on left: 15 16 17 18 19 20 21
        on right: 10 16 17 18 19 20 21


State 0

    0 $accept: • Program $end

    TYPE             shift, and go to state 1
    ID               shift, and go to state 2
    SEMICOLON        shift, and go to state 3
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5
    FUN              shift, and go to state 6

    TYPE             [reduce using rule 7 (StmtList)]
    ID               [reduce using rule 7 (StmtList)]
    SEMICOLON        [reduce using rule 7 (StmtList)]
    LEFTPARENTHESIS  [reduce using rule 7 (StmtList)]
    NUMBER           [reduce using rule 7 (StmtList)]
    FUN              [reduce using rule 7 (StmtList)]
    $default         reduce using rule 7 (StmtList)

    Program   go to state 7
    DeclList  go to state 8
    Decl      go to state 9
    StmtList  go to state 10
    Stmt      go to state 11
    FunDecl   go to state 12
    VarDecl   go to state 13
    Expr      go to state 14


State 1

   14 VarDecl: TYPE • ID SEMICOLON

    ID  shift, and go to state 15


State 2

   16 Expr: ID • EQUAL Expr

    EQUAL  shift, and go to state 16


State 3

    9 Stmt: SEMICOLON •

    $default  reduce using rule 9 (Stmt)


State 4

   21 Expr: LEFTPARENTHESIS • Expr RIGHTPARENTHESIS

    ID               shift, and go to state 2
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    Expr  go to state 17


State 5

   15 Expr: NUMBER •

    $default  reduce using rule 15 (Expr)


State 6

   12 FunDecl: FUN • TYPE ID $@1 LEFTPARENTHESIS RIGHTPARENTHESIS Block

    TYPE  shift, and go to state 18


State 7

    0 $accept: Program • $end

    $end  shift, and go to state 19


State 8

    1 Program: DeclList •

    $default  reduce using rule 1 (Program)


State 9

    2 DeclList: Decl • DeclList
    3         | Decl •

    TYPE             shift, and go to state 1
    ID               shift, and go to state 2
    SEMICOLON        shift, and go to state 3
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5
    FUN              shift, and go to state 6

    $end              reduce using rule 3 (DeclList)
    $end              [reduce using rule 7 (StmtList)]
    TYPE              [reduce using rule 7 (StmtList)]
    ID                [reduce using rule 3 (DeclList)]
    ID                [reduce using rule 7 (StmtList)]
    SEMICOLON         [reduce using rule 3 (DeclList)]
    SEMICOLON         [reduce using rule 7 (StmtList)]
    LEFTPARENTHESIS   [reduce using rule 3 (DeclList)]
    LEFTPARENTHESIS   [reduce using rule 7 (StmtList)]
    RIGHCURLYBRACKET  reduce using rule 3 (DeclList)
    RIGHCURLYBRACKET  [reduce using rule 7 (StmtList)]
    NUMBER            [reduce using rule 3 (DeclList)]
    NUMBER            [reduce using rule 7 (StmtList)]
    FUN               [reduce using rule 7 (StmtList)]
    $default          reduce using rule 3 (DeclList)

    DeclList  go to state 20
    Decl      go to state 9
    StmtList  go to state 10
    Stmt      go to state 11
    FunDecl   go to state 12
    VarDecl   go to state 13
    Expr      go to state 14


State 10

    6 Decl: StmtList •

    $default  reduce using rule 6 (Decl)


State 11

    8 StmtList: Stmt • StmtList

    ID               shift, and go to state 2
    SEMICOLON        shift, and go to state 3
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    ID               [reduce using rule 7 (StmtList)]
    SEMICOLON        [reduce using rule 7 (StmtList)]
    LEFTPARENTHESIS  [reduce using rule 7 (StmtList)]
    NUMBER           [reduce using rule 7 (StmtList)]
    $default         reduce using rule 7 (StmtList)

    StmtList  go to state 21
    Stmt      go to state 11
    Expr      go to state 14


State 12

    4 Decl: FunDecl •

    $default  reduce using rule 4 (Decl)


State 13

    5 Decl: VarDecl •

    $default  reduce using rule 5 (Decl)


State 14

   10 Stmt: Expr • SEMICOLON
   17 Expr: Expr • PLUS Expr
   18     | Expr • MINUS Expr
   19     | Expr • MULTIPLY Expr
   20     | Expr • DIVIDE Expr

    SEMICOLON  shift, and go to state 22
    PLUS       shift, and go to state 23
    MINUS      shift, and go to state 24
    MULTIPLY   shift, and go to state 25
    DIVIDE     shift, and go to state 26


State 15

   14 VarDecl: TYPE ID • SEMICOLON

    SEMICOLON  shift, and go to state 27


State 16

   16 Expr: ID EQUAL • Expr

    ID               shift, and go to state 2
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    Expr  go to state 28


State 17

   17 Expr: Expr • PLUS Expr
   18     | Expr • MINUS Expr
   19     | Expr • MULTIPLY Expr
   20     | Expr • DIVIDE Expr
   21     | LEFTPARENTHESIS Expr • RIGHTPARENTHESIS

    PLUS              shift, and go to state 23
    MINUS             shift, and go to state 24
    MULTIPLY          shift, and go to state 25
    DIVIDE            shift, and go to state 26
    RIGHTPARENTHESIS  shift, and go to state 29


State 18

   12 FunDecl: FUN TYPE • ID $@1 LEFTPARENTHESIS RIGHTPARENTHESIS Block

    ID  shift, and go to state 30


State 19

    0 $accept: Program $end •

    $default  accept


State 20

    2 DeclList: Decl DeclList •

    $default  reduce using rule 2 (DeclList)


State 21

    8 StmtList: Stmt StmtList •

    $default  reduce using rule 8 (StmtList)


State 22

   10 Stmt: Expr SEMICOLON •

    $default  reduce using rule 10 (Stmt)


State 23

   17 Expr: Expr PLUS • Expr

    ID               shift, and go to state 2
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    Expr  go to state 31


State 24

   18 Expr: Expr MINUS • Expr

    ID               shift, and go to state 2
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    Expr  go to state 32


State 25

   19 Expr: Expr MULTIPLY • Expr

    ID               shift, and go to state 2
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    Expr  go to state 33


State 26

   20 Expr: Expr DIVIDE • Expr

    ID               shift, and go to state 2
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    Expr  go to state 34


State 27

   14 VarDecl: TYPE ID SEMICOLON •

    $default  reduce using rule 14 (VarDecl)


State 28

   16 Expr: ID EQUAL Expr •
   17     | Expr • PLUS Expr
   18     | Expr • MINUS Expr
   19     | Expr • MULTIPLY Expr
   20     | Expr • DIVIDE Expr

    PLUS      shift, and go to state 23
    MINUS     shift, and go to state 24
    MULTIPLY  shift, and go to state 25
    DIVIDE    shift, and go to state 26

    PLUS      [reduce using rule 16 (Expr)]
    MINUS     [reduce using rule 16 (Expr)]
    MULTIPLY  [reduce using rule 16 (Expr)]
    DIVIDE    [reduce using rule 16 (Expr)]
    $default  reduce using rule 16 (Expr)


State 29

   21 Expr: LEFTPARENTHESIS Expr RIGHTPARENTHESIS •

    $default  reduce using rule 21 (Expr)


State 30

   12 FunDecl: FUN TYPE ID • $@1 LEFTPARENTHESIS RIGHTPARENTHESIS Block

    $default  reduce using rule 11 ($@1)

    $@1  go to state 35


State 31

   17 Expr: Expr • PLUS Expr
   17     | Expr PLUS Expr •
   18     | Expr • MINUS Expr
   19     | Expr • MULTIPLY Expr
   20     | Expr • DIVIDE Expr

    PLUS      shift, and go to state 23
    MINUS     shift, and go to state 24
    MULTIPLY  shift, and go to state 25
    DIVIDE    shift, and go to state 26

    PLUS      [reduce using rule 17 (Expr)]
    MINUS     [reduce using rule 17 (Expr)]
    MULTIPLY  [reduce using rule 17 (Expr)]
    DIVIDE    [reduce using rule 17 (Expr)]
    $default  reduce using rule 17 (Expr)


State 32

   17 Expr: Expr • PLUS Expr
   18     | Expr • MINUS Expr
   18     | Expr MINUS Expr •
   19     | Expr • MULTIPLY Expr
   20     | Expr • DIVIDE Expr

    PLUS      shift, and go to state 23
    MINUS     shift, and go to state 24
    MULTIPLY  shift, and go to state 25
    DIVIDE    shift, and go to state 26

    PLUS      [reduce using rule 18 (Expr)]
    MINUS     [reduce using rule 18 (Expr)]
    MULTIPLY  [reduce using rule 18 (Expr)]
    DIVIDE    [reduce using rule 18 (Expr)]
    $default  reduce using rule 18 (Expr)


State 33

   17 Expr: Expr • PLUS Expr
   18     | Expr • MINUS Expr
   19     | Expr • MULTIPLY Expr
   19     | Expr MULTIPLY Expr •
   20     | Expr • DIVIDE Expr

    PLUS      shift, and go to state 23
    MINUS     shift, and go to state 24
    MULTIPLY  shift, and go to state 25
    DIVIDE    shift, and go to state 26

    PLUS      [reduce using rule 19 (Expr)]
    MINUS     [reduce using rule 19 (Expr)]
    MULTIPLY  [reduce using rule 19 (Expr)]
    DIVIDE    [reduce using rule 19 (Expr)]
    $default  reduce using rule 19 (Expr)


State 34

   17 Expr: Expr • PLUS Expr
   18     | Expr • MINUS Expr
   19     | Expr • MULTIPLY Expr
   20     | Expr • DIVIDE Expr
   20     | Expr DIVIDE Expr •

    PLUS      shift, and go to state 23
    MINUS     shift, and go to state 24
    MULTIPLY  shift, and go to state 25
    DIVIDE    shift, and go to state 26

    PLUS      [reduce using rule 20 (Expr)]
    MINUS     [reduce using rule 20 (Expr)]
    MULTIPLY  [reduce using rule 20 (Expr)]
    DIVIDE    [reduce using rule 20 (Expr)]
    $default  reduce using rule 20 (Expr)


State 35

   12 FunDecl: FUN TYPE ID $@1 • LEFTPARENTHESIS RIGHTPARENTHESIS Block

    LEFTPARENTHESIS  shift, and go to state 36


State 36

   12 FunDecl: FUN TYPE ID $@1 LEFTPARENTHESIS • RIGHTPARENTHESIS Block

    RIGHTPARENTHESIS  shift, and go to state 37


State 37

   12 FunDecl: FUN TYPE ID $@1 LEFTPARENTHESIS RIGHTPARENTHESIS • Block

    LEFTCURLYBRACKET  shift, and go to state 38

    Block  go to state 39


State 38

   13 Block: LEFTCURLYBRACKET • DeclList StmtList RIGHCURLYBRACKET

    TYPE             shift, and go to state 1
    ID               shift, and go to state 2
    SEMICOLON        shift, and go to state 3
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5
    FUN              shift, and go to state 6

    TYPE             [reduce using rule 7 (StmtList)]
    ID               [reduce using rule 7 (StmtList)]
    SEMICOLON        [reduce using rule 7 (StmtList)]
    LEFTPARENTHESIS  [reduce using rule 7 (StmtList)]
    NUMBER           [reduce using rule 7 (StmtList)]
    FUN              [reduce using rule 7 (StmtList)]
    $default         reduce using rule 7 (StmtList)

    DeclList  go to state 40
    Decl      go to state 9
    StmtList  go to state 10
    Stmt      go to state 11
    FunDecl   go to state 12
    VarDecl   go to state 13
    Expr      go to state 14


State 39

   12 FunDecl: FUN TYPE ID $@1 LEFTPARENTHESIS RIGHTPARENTHESIS Block •

    $default  reduce using rule 12 (FunDecl)


State 40

   13 Block: LEFTCURLYBRACKET DeclList • StmtList RIGHCURLYBRACKET

    ID               shift, and go to state 2
    SEMICOLON        shift, and go to state 3
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    $default  reduce using rule 7 (StmtList)

    StmtList  go to state 41
    Stmt      go to state 11
    Expr      go to state 14


State 41

   13 Block: LEFTCURLYBRACKET DeclList StmtList • RIGHCURLYBRACKET

    RIGHCURLYBRACKET  shift, and go to state 42


State 42

   13 Block: LEFTCURLYBRACKET DeclList StmtList RIGHCURLYBRACKET •

    $default  reduce using rule 13 (Block)
