Nonterminals useless in grammar

    Primary
    UnaryOp
    BinaryOp


Terminals unused in grammar

    TYPE
    WRITE
    IF
    WHILE


Rules useless in grammar

   55 Primary: ID
   56        | NUMBER
   57        | LEFTPARENTHESIS Expr RIGHTPARENTHESIS
   58        | ID LEFTBRACKET Expr RIGHTBRACKET

   59 UnaryOp: MINUS
   60        | UNARYNOT

   61 BinaryOp: PLUS
   62         | MINUS
   63         | MULTIPLY
   64         | DIVIDE
   65         | LOGICALAND
   66         | LOGICALOR


Rules useless in parser due to conflicts

   27 FunCall: ε


State 0 conflicts: 14 shift/reduce, 1 reduce/reduce
State 17 conflicts: 14 shift/reduce, 10 reduce/reduce
State 19 conflicts: 7 shift/reduce, 1 reduce/reduce
State 54 conflicts: 12 shift/reduce
State 87 conflicts: 12 shift/reduce
State 96 conflicts: 14 shift/reduce, 1 reduce/reduce
State 98 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: FunDecl
    5     | VarDecl
    6     | StmtList

    7 StmtList: ε
    8         | Stmt StmtList

    9 Stmt: SEMICOLON
   10     | Expr SEMICOLON
   11     | ReturnStmt SEMICOLON
   12     | FunCall SEMICOLON

   13 Type: INT
   14     | FLOAT
   15     | BOOL
   16     | CHAR
   17     | STRING
   18     | VOID

   19 ParamList: ε
   20          | Type ID COMMA ParamList
   21          | Type ID

   22 Param: Type ID COMMA Param
   23      | Type ID
   24      | ε

   25 ReturnStmt: RETURN Expr

   26 FunCall: ID LEFTPARENTHESIS Param RIGHTPARENTHESIS
   27        | ε

   28 $@1: ε

   29 $@2: ε

   30 FunDecl: FUN Type ID $@1 LEFTPARENTHESIS ParamList RIGHTPARENTHESIS $@2 Block

   31 Block: LEFTCURLYBRACKET DeclList StmtList RIGHCURLYBRACKET

   32 VarDecl: Type ID SEMICOLON
   33        | Type ID EQUAL Expr SEMICOLON
   34        | Type ID LEFTBRACKET Expr RIGHTBRACKET SEMICOLON

   35 Expr: NUMBER
   36     | MINUS NUMBER
   37     | ID
   38     | LEFTPARENTHESIS Expr RIGHTPARENTHESIS
   39     | UNARYNOT Expr
   40     | ID LEFTBRACKET Expr RIGHTBRACKET
   41     | ID EQUAL Expr
   42     | ID LEFTBRACKET Expr RIGHTBRACKET EQUAL Expr
   43     | Expr PLUS Expr
   44     | Expr MINUS Expr
   45     | Expr MULTIPLY Expr
   46     | Expr DIVIDE Expr
   47     | Expr EQUAL_TO Expr
   48     | Expr NOT_EQUAL_TO Expr
   49     | Expr LESS_THAN Expr
   50     | Expr LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr GREATER_THAN Expr
   52     | Expr GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr LOGICALAND Expr
   54     | Expr LOGICALOR Expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPE <string> (258)
    INT <string> (259) 13
    FLOAT <string> (260) 14
    CHAR <string> (261) 16
    BOOL <string> (262) 15
    STRING <string> (263) 17
    VOID <string> (264) 18
    ID <string> (265) 20 21 22 23 26 30 32 33 34 37 40 41 42
    RETURN <string> (266) 25
    SEMICOLON <character> (267) 9 10 11 12 32 33 34
    COMMA <character> (268) 20 22
    EQUAL <character> (269) 33 41 42
    PLUS <character> (270) 43
    MINUS <character> (271) 36 44
    MULTIPLY <character> (272) 45
    DIVIDE <character> (273) 46
    LEFTPARENTHESIS <character> (274) 26 30 38
    RIGHTPARENTHESIS <character> (275) 26 30 38
    LEFTCURLYBRACKET <character> (276) 31
    RIGHCURLYBRACKET <character> (277) 31
    LEFTBRACKET <character> (278) 34 40 42
    RIGHTBRACKET <character> (279) 34 40 42
    UNARYNOT <character> (280) 39
    LOGICALAND <string> (281) 53
    LOGICALOR <string> (282) 54
    NUMBER <string> (283) 35 36
    WRITE <string> (284)
    FUN <string> (285) 30
    IF <string> (286)
    WHILE <string> (287)
    LESS_THAN <string> (288) 49
    GREATER_THAN <string> (289) 51
    LESS_THAN_OR_EQUAL_TO <string> (290) 50
    GREATER_THAN_OR_EQUAL_TO <string> (291) 52
    EQUAL_TO <string> (292) 47
    NOT_EQUAL_TO <string> (293) 48


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    Program <ast> (40)
        on left: 1
        on right: 0
    DeclList <ast> (41)
        on left: 2 3
        on right: 1 2 31
    Decl <ast> (42)
        on left: 4 5 6
        on right: 2 3
    StmtList <ast> (43)
        on left: 7 8
        on right: 6 8 31
    Stmt <ast> (44)
        on left: 9 10 11 12
        on right: 8
    Type <ast> (45)
        on left: 13 14 15 16 17 18
        on right: 20 21 22 23 30 32 33 34
    ParamList <ast> (46)
        on left: 19 20 21
        on right: 20 30
    Param <ast> (47)
        on left: 22 23 24
        on right: 22 26
    ReturnStmt (48)
        on left: 25
        on right: 11
    FunCall (49)
        on left: 26 27
        on right: 12
    FunDecl <ast> (50)
        on left: 30
        on right: 4
    $@1 (51)
        on left: 28
        on right: 30
    $@2 (52)
        on left: 29
        on right: 30
    Block <ast> (53)
        on left: 31
        on right: 30
    VarDecl <ast> (54)
        on left: 32 33 34
        on right: 5
    Expr <ast> (55)
        on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
        on right: 10 25 33 34 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54


State 0

    0 $accept: • Program $end

    INT              shift, and go to state 1
    FLOAT            shift, and go to state 2
    CHAR             shift, and go to state 3
    BOOL             shift, and go to state 4
    STRING           shift, and go to state 5
    VOID             shift, and go to state 6
    ID               shift, and go to state 7
    RETURN           shift, and go to state 8
    SEMICOLON        shift, and go to state 9
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    FUN              shift, and go to state 14

    INT              [reduce using rule 7 (StmtList)]
    FLOAT            [reduce using rule 7 (StmtList)]
    CHAR             [reduce using rule 7 (StmtList)]
    BOOL             [reduce using rule 7 (StmtList)]
    STRING           [reduce using rule 7 (StmtList)]
    VOID             [reduce using rule 7 (StmtList)]
    ID               [reduce using rule 7 (StmtList)]
    RETURN           [reduce using rule 7 (StmtList)]
    SEMICOLON        [reduce using rule 7 (StmtList)]
    SEMICOLON        [reduce using rule 27 (FunCall)]
    MINUS            [reduce using rule 7 (StmtList)]
    LEFTPARENTHESIS  [reduce using rule 7 (StmtList)]
    UNARYNOT         [reduce using rule 7 (StmtList)]
    NUMBER           [reduce using rule 7 (StmtList)]
    FUN              [reduce using rule 7 (StmtList)]
    $default         reduce using rule 7 (StmtList)

    Program     go to state 15
    DeclList    go to state 16
    Decl        go to state 17
    StmtList    go to state 18
    Stmt        go to state 19
    Type        go to state 20
    ReturnStmt  go to state 21
    FunCall     go to state 22
    FunDecl     go to state 23
    VarDecl     go to state 24
    Expr        go to state 25


State 1

   13 Type: INT •

    $default  reduce using rule 13 (Type)


State 2

   14 Type: FLOAT •

    $default  reduce using rule 14 (Type)


State 3

   16 Type: CHAR •

    $default  reduce using rule 16 (Type)


State 4

   15 Type: BOOL •

    $default  reduce using rule 15 (Type)


State 5

   17 Type: STRING •

    $default  reduce using rule 17 (Type)


State 6

   18 Type: VOID •

    $default  reduce using rule 18 (Type)


State 7

   26 FunCall: ID • LEFTPARENTHESIS Param RIGHTPARENTHESIS
   37 Expr: ID •
   40     | ID • LEFTBRACKET Expr RIGHTBRACKET
   41     | ID • EQUAL Expr
   42     | ID • LEFTBRACKET Expr RIGHTBRACKET EQUAL Expr

    EQUAL            shift, and go to state 26
    LEFTPARENTHESIS  shift, and go to state 27
    LEFTBRACKET      shift, and go to state 28

    $default  reduce using rule 37 (Expr)


State 8

   25 ReturnStmt: RETURN • Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 30


State 9

    9 Stmt: SEMICOLON •

    $default  reduce using rule 9 (Stmt)


State 10

   36 Expr: MINUS • NUMBER

    NUMBER  shift, and go to state 31


State 11

   38 Expr: LEFTPARENTHESIS • Expr RIGHTPARENTHESIS

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 32


State 12

   39 Expr: UNARYNOT • Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 33


State 13

   35 Expr: NUMBER •

    $default  reduce using rule 35 (Expr)


State 14

   30 FunDecl: FUN • Type ID $@1 LEFTPARENTHESIS ParamList RIGHTPARENTHESIS $@2 Block

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    VOID    shift, and go to state 6

    Type  go to state 34


State 15

    0 $accept: Program • $end

    $end  shift, and go to state 35


State 16

    1 Program: DeclList •

    $default  reduce using rule 1 (Program)


State 17

    2 DeclList: Decl • DeclList
    3         | Decl •

    INT              shift, and go to state 1
    FLOAT            shift, and go to state 2
    CHAR             shift, and go to state 3
    BOOL             shift, and go to state 4
    STRING           shift, and go to state 5
    VOID             shift, and go to state 6
    ID               shift, and go to state 7
    RETURN           shift, and go to state 8
    SEMICOLON        shift, and go to state 9
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    FUN              shift, and go to state 14

    $end              reduce using rule 3 (DeclList)
    $end              [reduce using rule 7 (StmtList)]
    INT               [reduce using rule 7 (StmtList)]
    FLOAT             [reduce using rule 7 (StmtList)]
    CHAR              [reduce using rule 7 (StmtList)]
    BOOL              [reduce using rule 7 (StmtList)]
    STRING            [reduce using rule 7 (StmtList)]
    VOID              [reduce using rule 7 (StmtList)]
    ID                [reduce using rule 3 (DeclList)]
    ID                [reduce using rule 7 (StmtList)]
    RETURN            [reduce using rule 3 (DeclList)]
    RETURN            [reduce using rule 7 (StmtList)]
    SEMICOLON         [reduce using rule 3 (DeclList)]
    SEMICOLON         [reduce using rule 7 (StmtList)]
    SEMICOLON         [reduce using rule 27 (FunCall)]
    MINUS             [reduce using rule 3 (DeclList)]
    MINUS             [reduce using rule 7 (StmtList)]
    LEFTPARENTHESIS   [reduce using rule 3 (DeclList)]
    LEFTPARENTHESIS   [reduce using rule 7 (StmtList)]
    RIGHCURLYBRACKET  reduce using rule 3 (DeclList)
    RIGHCURLYBRACKET  [reduce using rule 7 (StmtList)]
    UNARYNOT          [reduce using rule 3 (DeclList)]
    UNARYNOT          [reduce using rule 7 (StmtList)]
    NUMBER            [reduce using rule 3 (DeclList)]
    NUMBER            [reduce using rule 7 (StmtList)]
    FUN               [reduce using rule 7 (StmtList)]
    $default          reduce using rule 3 (DeclList)

    DeclList    go to state 36
    Decl        go to state 17
    StmtList    go to state 18
    Stmt        go to state 19
    Type        go to state 20
    ReturnStmt  go to state 21
    FunCall     go to state 22
    FunDecl     go to state 23
    VarDecl     go to state 24
    Expr        go to state 25


State 18

    6 Decl: StmtList •

    $default  reduce using rule 6 (Decl)


State 19

    8 StmtList: Stmt • StmtList

    ID               shift, and go to state 7
    RETURN           shift, and go to state 8
    SEMICOLON        shift, and go to state 9
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    ID               [reduce using rule 7 (StmtList)]
    RETURN           [reduce using rule 7 (StmtList)]
    SEMICOLON        [reduce using rule 7 (StmtList)]
    SEMICOLON        [reduce using rule 27 (FunCall)]
    MINUS            [reduce using rule 7 (StmtList)]
    LEFTPARENTHESIS  [reduce using rule 7 (StmtList)]
    UNARYNOT         [reduce using rule 7 (StmtList)]
    NUMBER           [reduce using rule 7 (StmtList)]
    $default         reduce using rule 7 (StmtList)

    StmtList    go to state 37
    Stmt        go to state 19
    ReturnStmt  go to state 21
    FunCall     go to state 22
    Expr        go to state 25


State 20

   32 VarDecl: Type • ID SEMICOLON
   33        | Type • ID EQUAL Expr SEMICOLON
   34        | Type • ID LEFTBRACKET Expr RIGHTBRACKET SEMICOLON

    ID  shift, and go to state 38


State 21

   11 Stmt: ReturnStmt • SEMICOLON

    SEMICOLON  shift, and go to state 39


State 22

   12 Stmt: FunCall • SEMICOLON

    SEMICOLON  shift, and go to state 40


State 23

    4 Decl: FunDecl •

    $default  reduce using rule 4 (Decl)


State 24

    5 Decl: VarDecl •

    $default  reduce using rule 5 (Decl)


State 25

   10 Stmt: Expr • SEMICOLON
   43 Expr: Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    SEMICOLON                 shift, and go to state 41
    PLUS                      shift, and go to state 42
    MINUS                     shift, and go to state 43
    MULTIPLY                  shift, and go to state 44
    DIVIDE                    shift, and go to state 45
    LOGICALAND                shift, and go to state 46
    LOGICALOR                 shift, and go to state 47
    LESS_THAN                 shift, and go to state 48
    GREATER_THAN              shift, and go to state 49
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 50
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 51
    EQUAL_TO                  shift, and go to state 52
    NOT_EQUAL_TO              shift, and go to state 53


State 26

   41 Expr: ID EQUAL • Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 54


State 27

   26 FunCall: ID LEFTPARENTHESIS • Param RIGHTPARENTHESIS

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 24 (Param)

    Type   go to state 55
    Param  go to state 56


State 28

   40 Expr: ID LEFTBRACKET • Expr RIGHTBRACKET
   42     | ID LEFTBRACKET • Expr RIGHTBRACKET EQUAL Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 57


State 29

   37 Expr: ID •
   40     | ID • LEFTBRACKET Expr RIGHTBRACKET
   41     | ID • EQUAL Expr
   42     | ID • LEFTBRACKET Expr RIGHTBRACKET EQUAL Expr

    EQUAL        shift, and go to state 26
    LEFTBRACKET  shift, and go to state 28

    $default  reduce using rule 37 (Expr)


State 30

   25 ReturnStmt: RETURN Expr •
   43 Expr: Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    PLUS                      shift, and go to state 42
    MINUS                     shift, and go to state 43
    MULTIPLY                  shift, and go to state 44
    DIVIDE                    shift, and go to state 45
    LOGICALAND                shift, and go to state 46
    LOGICALOR                 shift, and go to state 47
    LESS_THAN                 shift, and go to state 48
    GREATER_THAN              shift, and go to state 49
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 50
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 51
    EQUAL_TO                  shift, and go to state 52
    NOT_EQUAL_TO              shift, and go to state 53

    $default  reduce using rule 25 (ReturnStmt)


State 31

   36 Expr: MINUS NUMBER •

    $default  reduce using rule 36 (Expr)


State 32

   38 Expr: LEFTPARENTHESIS Expr • RIGHTPARENTHESIS
   43     | Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    PLUS                      shift, and go to state 42
    MINUS                     shift, and go to state 43
    MULTIPLY                  shift, and go to state 44
    DIVIDE                    shift, and go to state 45
    RIGHTPARENTHESIS          shift, and go to state 58
    LOGICALAND                shift, and go to state 46
    LOGICALOR                 shift, and go to state 47
    LESS_THAN                 shift, and go to state 48
    GREATER_THAN              shift, and go to state 49
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 50
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 51
    EQUAL_TO                  shift, and go to state 52
    NOT_EQUAL_TO              shift, and go to state 53


State 33

   39 Expr: UNARYNOT Expr •
   43     | Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    $default  reduce using rule 39 (Expr)


State 34

   30 FunDecl: FUN Type • ID $@1 LEFTPARENTHESIS ParamList RIGHTPARENTHESIS $@2 Block

    ID  shift, and go to state 59


State 35

    0 $accept: Program $end •

    $default  accept


State 36

    2 DeclList: Decl DeclList •

    $default  reduce using rule 2 (DeclList)


State 37

    8 StmtList: Stmt StmtList •

    $default  reduce using rule 8 (StmtList)


State 38

   32 VarDecl: Type ID • SEMICOLON
   33        | Type ID • EQUAL Expr SEMICOLON
   34        | Type ID • LEFTBRACKET Expr RIGHTBRACKET SEMICOLON

    SEMICOLON    shift, and go to state 60
    EQUAL        shift, and go to state 61
    LEFTBRACKET  shift, and go to state 62


State 39

   11 Stmt: ReturnStmt SEMICOLON •

    $default  reduce using rule 11 (Stmt)


State 40

   12 Stmt: FunCall SEMICOLON •

    $default  reduce using rule 12 (Stmt)


State 41

   10 Stmt: Expr SEMICOLON •

    $default  reduce using rule 10 (Stmt)


State 42

   43 Expr: Expr PLUS • Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 63


State 43

   44 Expr: Expr MINUS • Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 64


State 44

   45 Expr: Expr MULTIPLY • Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 65


State 45

   46 Expr: Expr DIVIDE • Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 66


State 46

   53 Expr: Expr LOGICALAND • Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 67


State 47

   54 Expr: Expr LOGICALOR • Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 68


State 48

   49 Expr: Expr LESS_THAN • Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 69


State 49

   51 Expr: Expr GREATER_THAN • Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 70


State 50

   50 Expr: Expr LESS_THAN_OR_EQUAL_TO • Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 71


State 51

   52 Expr: Expr GREATER_THAN_OR_EQUAL_TO • Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 72


State 52

   47 Expr: Expr EQUAL_TO • Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 73


State 53

   48 Expr: Expr NOT_EQUAL_TO • Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 74


State 54

   41 Expr: ID EQUAL Expr •
   43     | Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    PLUS                      shift, and go to state 42
    MINUS                     shift, and go to state 43
    MULTIPLY                  shift, and go to state 44
    DIVIDE                    shift, and go to state 45
    LOGICALAND                shift, and go to state 46
    LOGICALOR                 shift, and go to state 47
    LESS_THAN                 shift, and go to state 48
    GREATER_THAN              shift, and go to state 49
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 50
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 51
    EQUAL_TO                  shift, and go to state 52
    NOT_EQUAL_TO              shift, and go to state 53

    PLUS                      [reduce using rule 41 (Expr)]
    MINUS                     [reduce using rule 41 (Expr)]
    MULTIPLY                  [reduce using rule 41 (Expr)]
    DIVIDE                    [reduce using rule 41 (Expr)]
    LOGICALAND                [reduce using rule 41 (Expr)]
    LOGICALOR                 [reduce using rule 41 (Expr)]
    LESS_THAN                 [reduce using rule 41 (Expr)]
    GREATER_THAN              [reduce using rule 41 (Expr)]
    LESS_THAN_OR_EQUAL_TO     [reduce using rule 41 (Expr)]
    GREATER_THAN_OR_EQUAL_TO  [reduce using rule 41 (Expr)]
    EQUAL_TO                  [reduce using rule 41 (Expr)]
    NOT_EQUAL_TO              [reduce using rule 41 (Expr)]
    $default                  reduce using rule 41 (Expr)


State 55

   22 Param: Type • ID COMMA Param
   23      | Type • ID

    ID  shift, and go to state 75


State 56

   26 FunCall: ID LEFTPARENTHESIS Param • RIGHTPARENTHESIS

    RIGHTPARENTHESIS  shift, and go to state 76


State 57

   40 Expr: ID LEFTBRACKET Expr • RIGHTBRACKET
   42     | ID LEFTBRACKET Expr • RIGHTBRACKET EQUAL Expr
   43     | Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    PLUS                      shift, and go to state 42
    MINUS                     shift, and go to state 43
    MULTIPLY                  shift, and go to state 44
    DIVIDE                    shift, and go to state 45
    RIGHTBRACKET              shift, and go to state 77
    LOGICALAND                shift, and go to state 46
    LOGICALOR                 shift, and go to state 47
    LESS_THAN                 shift, and go to state 48
    GREATER_THAN              shift, and go to state 49
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 50
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 51
    EQUAL_TO                  shift, and go to state 52
    NOT_EQUAL_TO              shift, and go to state 53


State 58

   38 Expr: LEFTPARENTHESIS Expr RIGHTPARENTHESIS •

    $default  reduce using rule 38 (Expr)


State 59

   30 FunDecl: FUN Type ID • $@1 LEFTPARENTHESIS ParamList RIGHTPARENTHESIS $@2 Block

    $default  reduce using rule 28 ($@1)

    $@1  go to state 78


State 60

   32 VarDecl: Type ID SEMICOLON •

    $default  reduce using rule 32 (VarDecl)


State 61

   33 VarDecl: Type ID EQUAL • Expr SEMICOLON

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 79


State 62

   34 VarDecl: Type ID LEFTBRACKET • Expr RIGHTBRACKET SEMICOLON

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 80


State 63

   43 Expr: Expr • PLUS Expr
   43     | Expr PLUS Expr •
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    MULTIPLY  shift, and go to state 44
    DIVIDE    shift, and go to state 45

    $default  reduce using rule 43 (Expr)


State 64

   43 Expr: Expr • PLUS Expr
   44     | Expr • MINUS Expr
   44     | Expr MINUS Expr •
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    MULTIPLY  shift, and go to state 44
    DIVIDE    shift, and go to state 45

    $default  reduce using rule 44 (Expr)


State 65

   43 Expr: Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   45     | Expr MULTIPLY Expr •
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    $default  reduce using rule 45 (Expr)


State 66

   43 Expr: Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   46     | Expr DIVIDE Expr •
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    $default  reduce using rule 46 (Expr)


State 67

   43 Expr: Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   53     | Expr LOGICALAND Expr •
   54     | Expr • LOGICALOR Expr

    PLUS                      shift, and go to state 42
    MINUS                     shift, and go to state 43
    MULTIPLY                  shift, and go to state 44
    DIVIDE                    shift, and go to state 45
    LESS_THAN                 shift, and go to state 48
    GREATER_THAN              shift, and go to state 49
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 50
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 51
    EQUAL_TO                  shift, and go to state 52
    NOT_EQUAL_TO              shift, and go to state 53

    $default  reduce using rule 53 (Expr)


State 68

   43 Expr: Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr
   54     | Expr LOGICALOR Expr •

    PLUS                      shift, and go to state 42
    MINUS                     shift, and go to state 43
    MULTIPLY                  shift, and go to state 44
    DIVIDE                    shift, and go to state 45
    LOGICALAND                shift, and go to state 46
    LESS_THAN                 shift, and go to state 48
    GREATER_THAN              shift, and go to state 49
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 50
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 51
    EQUAL_TO                  shift, and go to state 52
    NOT_EQUAL_TO              shift, and go to state 53

    $default  reduce using rule 54 (Expr)


State 69

   43 Expr: Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   49     | Expr LESS_THAN Expr •
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43
    MULTIPLY  shift, and go to state 44
    DIVIDE    shift, and go to state 45

    $default  reduce using rule 49 (Expr)


State 70

   43 Expr: Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   51     | Expr GREATER_THAN Expr •
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43
    MULTIPLY  shift, and go to state 44
    DIVIDE    shift, and go to state 45

    $default  reduce using rule 51 (Expr)


State 71

   43 Expr: Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   50     | Expr LESS_THAN_OR_EQUAL_TO Expr •
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43
    MULTIPLY  shift, and go to state 44
    DIVIDE    shift, and go to state 45

    $default  reduce using rule 50 (Expr)


State 72

   43 Expr: Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   52     | Expr GREATER_THAN_OR_EQUAL_TO Expr •
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43
    MULTIPLY  shift, and go to state 44
    DIVIDE    shift, and go to state 45

    $default  reduce using rule 52 (Expr)


State 73

   43 Expr: Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   47     | Expr EQUAL_TO Expr •
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43
    MULTIPLY  shift, and go to state 44
    DIVIDE    shift, and go to state 45

    $default  reduce using rule 47 (Expr)


State 74

   43 Expr: Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   48     | Expr NOT_EQUAL_TO Expr •
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    PLUS      shift, and go to state 42
    MINUS     shift, and go to state 43
    MULTIPLY  shift, and go to state 44
    DIVIDE    shift, and go to state 45

    $default  reduce using rule 48 (Expr)


State 75

   22 Param: Type ID • COMMA Param
   23      | Type ID •

    COMMA  shift, and go to state 81

    $default  reduce using rule 23 (Param)


State 76

   26 FunCall: ID LEFTPARENTHESIS Param RIGHTPARENTHESIS •

    $default  reduce using rule 26 (FunCall)


State 77

   40 Expr: ID LEFTBRACKET Expr RIGHTBRACKET •
   42     | ID LEFTBRACKET Expr RIGHTBRACKET • EQUAL Expr

    EQUAL  shift, and go to state 82

    $default  reduce using rule 40 (Expr)


State 78

   30 FunDecl: FUN Type ID $@1 • LEFTPARENTHESIS ParamList RIGHTPARENTHESIS $@2 Block

    LEFTPARENTHESIS  shift, and go to state 83


State 79

   33 VarDecl: Type ID EQUAL Expr • SEMICOLON
   43 Expr: Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    SEMICOLON                 shift, and go to state 84
    PLUS                      shift, and go to state 42
    MINUS                     shift, and go to state 43
    MULTIPLY                  shift, and go to state 44
    DIVIDE                    shift, and go to state 45
    LOGICALAND                shift, and go to state 46
    LOGICALOR                 shift, and go to state 47
    LESS_THAN                 shift, and go to state 48
    GREATER_THAN              shift, and go to state 49
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 50
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 51
    EQUAL_TO                  shift, and go to state 52
    NOT_EQUAL_TO              shift, and go to state 53


State 80

   34 VarDecl: Type ID LEFTBRACKET Expr • RIGHTBRACKET SEMICOLON
   43 Expr: Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    PLUS                      shift, and go to state 42
    MINUS                     shift, and go to state 43
    MULTIPLY                  shift, and go to state 44
    DIVIDE                    shift, and go to state 45
    RIGHTBRACKET              shift, and go to state 85
    LOGICALAND                shift, and go to state 46
    LOGICALOR                 shift, and go to state 47
    LESS_THAN                 shift, and go to state 48
    GREATER_THAN              shift, and go to state 49
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 50
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 51
    EQUAL_TO                  shift, and go to state 52
    NOT_EQUAL_TO              shift, and go to state 53


State 81

   22 Param: Type ID COMMA • Param

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 24 (Param)

    Type   go to state 55
    Param  go to state 86


State 82

   42 Expr: ID LEFTBRACKET Expr RIGHTBRACKET EQUAL • Expr

    ID               shift, and go to state 29
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    Expr  go to state 87


State 83

   30 FunDecl: FUN Type ID $@1 LEFTPARENTHESIS • ParamList RIGHTPARENTHESIS $@2 Block

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 19 (ParamList)

    Type       go to state 88
    ParamList  go to state 89


State 84

   33 VarDecl: Type ID EQUAL Expr SEMICOLON •

    $default  reduce using rule 33 (VarDecl)


State 85

   34 VarDecl: Type ID LEFTBRACKET Expr RIGHTBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 90


State 86

   22 Param: Type ID COMMA Param •

    $default  reduce using rule 22 (Param)


State 87

   42 Expr: ID LEFTBRACKET Expr RIGHTBRACKET EQUAL Expr •
   43     | Expr • PLUS Expr
   44     | Expr • MINUS Expr
   45     | Expr • MULTIPLY Expr
   46     | Expr • DIVIDE Expr
   47     | Expr • EQUAL_TO Expr
   48     | Expr • NOT_EQUAL_TO Expr
   49     | Expr • LESS_THAN Expr
   50     | Expr • LESS_THAN_OR_EQUAL_TO Expr
   51     | Expr • GREATER_THAN Expr
   52     | Expr • GREATER_THAN_OR_EQUAL_TO Expr
   53     | Expr • LOGICALAND Expr
   54     | Expr • LOGICALOR Expr

    PLUS                      shift, and go to state 42
    MINUS                     shift, and go to state 43
    MULTIPLY                  shift, and go to state 44
    DIVIDE                    shift, and go to state 45
    LOGICALAND                shift, and go to state 46
    LOGICALOR                 shift, and go to state 47
    LESS_THAN                 shift, and go to state 48
    GREATER_THAN              shift, and go to state 49
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 50
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 51
    EQUAL_TO                  shift, and go to state 52
    NOT_EQUAL_TO              shift, and go to state 53

    PLUS                      [reduce using rule 42 (Expr)]
    MINUS                     [reduce using rule 42 (Expr)]
    MULTIPLY                  [reduce using rule 42 (Expr)]
    DIVIDE                    [reduce using rule 42 (Expr)]
    LOGICALAND                [reduce using rule 42 (Expr)]
    LOGICALOR                 [reduce using rule 42 (Expr)]
    LESS_THAN                 [reduce using rule 42 (Expr)]
    GREATER_THAN              [reduce using rule 42 (Expr)]
    LESS_THAN_OR_EQUAL_TO     [reduce using rule 42 (Expr)]
    GREATER_THAN_OR_EQUAL_TO  [reduce using rule 42 (Expr)]
    EQUAL_TO                  [reduce using rule 42 (Expr)]
    NOT_EQUAL_TO              [reduce using rule 42 (Expr)]
    $default                  reduce using rule 42 (Expr)


State 88

   20 ParamList: Type • ID COMMA ParamList
   21          | Type • ID

    ID  shift, and go to state 91


State 89

   30 FunDecl: FUN Type ID $@1 LEFTPARENTHESIS ParamList • RIGHTPARENTHESIS $@2 Block

    RIGHTPARENTHESIS  shift, and go to state 92


State 90

   34 VarDecl: Type ID LEFTBRACKET Expr RIGHTBRACKET SEMICOLON •

    $default  reduce using rule 34 (VarDecl)


State 91

   20 ParamList: Type ID • COMMA ParamList
   21          | Type ID •

    COMMA  shift, and go to state 93

    $default  reduce using rule 21 (ParamList)


State 92

   30 FunDecl: FUN Type ID $@1 LEFTPARENTHESIS ParamList RIGHTPARENTHESIS • $@2 Block

    $default  reduce using rule 29 ($@2)

    $@2  go to state 94


State 93

   20 ParamList: Type ID COMMA • ParamList

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 19 (ParamList)

    Type       go to state 88
    ParamList  go to state 95


State 94

   30 FunDecl: FUN Type ID $@1 LEFTPARENTHESIS ParamList RIGHTPARENTHESIS $@2 • Block

    LEFTCURLYBRACKET  shift, and go to state 96

    Block  go to state 97


State 95

   20 ParamList: Type ID COMMA ParamList •

    $default  reduce using rule 20 (ParamList)


State 96

   31 Block: LEFTCURLYBRACKET • DeclList StmtList RIGHCURLYBRACKET

    INT              shift, and go to state 1
    FLOAT            shift, and go to state 2
    CHAR             shift, and go to state 3
    BOOL             shift, and go to state 4
    STRING           shift, and go to state 5
    VOID             shift, and go to state 6
    ID               shift, and go to state 7
    RETURN           shift, and go to state 8
    SEMICOLON        shift, and go to state 9
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13
    FUN              shift, and go to state 14

    INT              [reduce using rule 7 (StmtList)]
    FLOAT            [reduce using rule 7 (StmtList)]
    CHAR             [reduce using rule 7 (StmtList)]
    BOOL             [reduce using rule 7 (StmtList)]
    STRING           [reduce using rule 7 (StmtList)]
    VOID             [reduce using rule 7 (StmtList)]
    ID               [reduce using rule 7 (StmtList)]
    RETURN           [reduce using rule 7 (StmtList)]
    SEMICOLON        [reduce using rule 7 (StmtList)]
    SEMICOLON        [reduce using rule 27 (FunCall)]
    MINUS            [reduce using rule 7 (StmtList)]
    LEFTPARENTHESIS  [reduce using rule 7 (StmtList)]
    UNARYNOT         [reduce using rule 7 (StmtList)]
    NUMBER           [reduce using rule 7 (StmtList)]
    FUN              [reduce using rule 7 (StmtList)]
    $default         reduce using rule 7 (StmtList)

    DeclList    go to state 98
    Decl        go to state 17
    StmtList    go to state 18
    Stmt        go to state 19
    Type        go to state 20
    ReturnStmt  go to state 21
    FunCall     go to state 22
    FunDecl     go to state 23
    VarDecl     go to state 24
    Expr        go to state 25


State 97

   30 FunDecl: FUN Type ID $@1 LEFTPARENTHESIS ParamList RIGHTPARENTHESIS $@2 Block •

    $default  reduce using rule 30 (FunDecl)


State 98

   31 Block: LEFTCURLYBRACKET DeclList • StmtList RIGHCURLYBRACKET

    ID               shift, and go to state 7
    RETURN           shift, and go to state 8
    SEMICOLON        shift, and go to state 9
    MINUS            shift, and go to state 10
    LEFTPARENTHESIS  shift, and go to state 11
    UNARYNOT         shift, and go to state 12
    NUMBER           shift, and go to state 13

    SEMICOLON  [reduce using rule 27 (FunCall)]
    $default   reduce using rule 7 (StmtList)

    StmtList    go to state 99
    Stmt        go to state 19
    ReturnStmt  go to state 21
    FunCall     go to state 22
    Expr        go to state 25


State 99

   31 Block: LEFTCURLYBRACKET DeclList StmtList • RIGHCURLYBRACKET

    RIGHCURLYBRACKET  shift, and go to state 100


State 100

   31 Block: LEFTCURLYBRACKET DeclList StmtList RIGHCURLYBRACKET •

    $default  reduce using rule 31 (Block)
