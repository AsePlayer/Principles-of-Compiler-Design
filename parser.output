Nonterminals useless in grammar

    BinaryOp


Terminals unused in grammar

    RETURN
    COMMA
    LOGICALAND
    LOGICALOR
    WRITE


Rules useless in grammar

   27 BinaryOp: PLUS
   28         | MINUS
   29         | MULTIPLY
   30         | DIVIDE
   31         | LOGICALAND
   32         | LOGICALOR


State 0 conflicts: 8 shift/reduce
State 11 conflicts: 8 shift/reduce, 8 reduce/reduce
State 15 conflicts: 6 shift/reduce
State 31 conflicts: 4 shift/reduce
State 33 conflicts: 4 shift/reduce
State 36 conflicts: 4 shift/reduce
State 37 conflicts: 4 shift/reduce
State 38 conflicts: 4 shift/reduce
State 39 conflicts: 4 shift/reduce
State 43 conflicts: 8 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: FunDecl
    5     | VarDecl
    6     | StmtList

    7 $@1: ε

    8 FunDecl: FUN TYPE ID $@1 LEFTPARENTHESIS RIGHTPARENTHESIS Block

    9 VarDecl: TYPE ID SEMICOLON

   10 StmtList: ε
   11         | Stmt StmtList

   12 Stmt: SEMICOLON
   13     | Expr SEMICOLON

   14 Block: LEFTCURLYBRACKET DeclList StmtList RIGHCURLYBRACKET

   15 Primary: ID
   16        | NUMBER
   17        | LEFTPARENTHESIS Expr RIGHTPARENTHESIS

   18 Expr: Primary
   19     | Expr PLUS Expr
   20     | Expr MINUS Expr
   21     | Expr MULTIPLY Expr
   22     | Expr DIVIDE Expr
   23     | UnaryOp Expr
   24     | ID EQUAL Expr

   25 UnaryOp: MINUS
   26        | UNARYNOT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPE <string> (258) 8 9
    ID <string> (259) 8 9 15 24
    RETURN <string> (260)
    SEMICOLON <character> (261) 9 12 13
    COMMA <character> (262)
    EQUAL <character> (263) 24
    PLUS <character> (264) 19
    MINUS <character> (265) 20 25
    MULTIPLY <character> (266) 21
    DIVIDE <character> (267) 22
    LEFTPARENTHESIS <character> (268) 8 17
    RIGHTPARENTHESIS <character> (269) 8 17
    LEFTCURLYBRACKET <character> (270) 14
    RIGHCURLYBRACKET <character> (271) 14
    UNARYNOT <character> (272) 26
    LOGICALAND <string> (273)
    LOGICALOR <string> (274)
    NUMBER <string> (275) 16
    WRITE <string> (276)
    FUN <string> (277) 8


Nonterminals, with rules where they appear

    $accept (23)
        on left: 0
    Program <ast> (24)
        on left: 1
        on right: 0
    DeclList <ast> (25)
        on left: 2 3
        on right: 1 2 14
    Decl <ast> (26)
        on left: 4 5 6
        on right: 2 3
    FunDecl <ast> (27)
        on left: 8
        on right: 4
    $@1 (28)
        on left: 7
        on right: 8
    VarDecl <ast> (29)
        on left: 9
        on right: 5
    StmtList <ast> (30)
        on left: 10 11
        on right: 6 11 14
    Stmt <ast> (31)
        on left: 12 13
        on right: 11
    Block (32)
        on left: 14
        on right: 8
    Primary (33)
        on left: 15 16 17
        on right: 18
    Expr <ast> (34)
        on left: 18 19 20 21 22 23 24
        on right: 13 17 19 20 21 22 23 24
    UnaryOp (35)
        on left: 25 26
        on right: 23


State 0

    0 $accept: • Program $end

    TYPE             shift, and go to state 1
    ID               shift, and go to state 2
    SEMICOLON        shift, and go to state 3
    MINUS            shift, and go to state 4
    LEFTPARENTHESIS  shift, and go to state 5
    UNARYNOT         shift, and go to state 6
    NUMBER           shift, and go to state 7
    FUN              shift, and go to state 8

    TYPE             [reduce using rule 10 (StmtList)]
    ID               [reduce using rule 10 (StmtList)]
    SEMICOLON        [reduce using rule 10 (StmtList)]
    MINUS            [reduce using rule 10 (StmtList)]
    LEFTPARENTHESIS  [reduce using rule 10 (StmtList)]
    UNARYNOT         [reduce using rule 10 (StmtList)]
    NUMBER           [reduce using rule 10 (StmtList)]
    FUN              [reduce using rule 10 (StmtList)]
    $default         reduce using rule 10 (StmtList)

    Program   go to state 9
    DeclList  go to state 10
    Decl      go to state 11
    FunDecl   go to state 12
    VarDecl   go to state 13
    StmtList  go to state 14
    Stmt      go to state 15
    Primary   go to state 16
    Expr      go to state 17
    UnaryOp   go to state 18


State 1

    9 VarDecl: TYPE • ID SEMICOLON

    ID  shift, and go to state 19


State 2

   15 Primary: ID •
   24 Expr: ID • EQUAL Expr

    EQUAL  shift, and go to state 20

    $default  reduce using rule 15 (Primary)


State 3

   12 Stmt: SEMICOLON •

    $default  reduce using rule 12 (Stmt)


State 4

   25 UnaryOp: MINUS •

    $default  reduce using rule 25 (UnaryOp)


State 5

   17 Primary: LEFTPARENTHESIS • Expr RIGHTPARENTHESIS

    ID               shift, and go to state 2
    MINUS            shift, and go to state 4
    LEFTPARENTHESIS  shift, and go to state 5
    UNARYNOT         shift, and go to state 6
    NUMBER           shift, and go to state 7

    Primary  go to state 16
    Expr     go to state 21
    UnaryOp  go to state 18


State 6

   26 UnaryOp: UNARYNOT •

    $default  reduce using rule 26 (UnaryOp)


State 7

   16 Primary: NUMBER •

    $default  reduce using rule 16 (Primary)


State 8

    8 FunDecl: FUN • TYPE ID $@1 LEFTPARENTHESIS RIGHTPARENTHESIS Block

    TYPE  shift, and go to state 22


State 9

    0 $accept: Program • $end

    $end  shift, and go to state 23


State 10

    1 Program: DeclList •

    $default  reduce using rule 1 (Program)


State 11

    2 DeclList: Decl • DeclList
    3         | Decl •

    TYPE             shift, and go to state 1
    ID               shift, and go to state 2
    SEMICOLON        shift, and go to state 3
    MINUS            shift, and go to state 4
    LEFTPARENTHESIS  shift, and go to state 5
    UNARYNOT         shift, and go to state 6
    NUMBER           shift, and go to state 7
    FUN              shift, and go to state 8

    $end              reduce using rule 3 (DeclList)
    $end              [reduce using rule 10 (StmtList)]
    TYPE              [reduce using rule 10 (StmtList)]
    ID                [reduce using rule 3 (DeclList)]
    ID                [reduce using rule 10 (StmtList)]
    SEMICOLON         [reduce using rule 3 (DeclList)]
    SEMICOLON         [reduce using rule 10 (StmtList)]
    MINUS             [reduce using rule 3 (DeclList)]
    MINUS             [reduce using rule 10 (StmtList)]
    LEFTPARENTHESIS   [reduce using rule 3 (DeclList)]
    LEFTPARENTHESIS   [reduce using rule 10 (StmtList)]
    RIGHCURLYBRACKET  reduce using rule 3 (DeclList)
    RIGHCURLYBRACKET  [reduce using rule 10 (StmtList)]
    UNARYNOT          [reduce using rule 3 (DeclList)]
    UNARYNOT          [reduce using rule 10 (StmtList)]
    NUMBER            [reduce using rule 3 (DeclList)]
    NUMBER            [reduce using rule 10 (StmtList)]
    FUN               [reduce using rule 10 (StmtList)]
    $default          reduce using rule 3 (DeclList)

    DeclList  go to state 24
    Decl      go to state 11
    FunDecl   go to state 12
    VarDecl   go to state 13
    StmtList  go to state 14
    Stmt      go to state 15
    Primary   go to state 16
    Expr      go to state 17
    UnaryOp   go to state 18


State 12

    4 Decl: FunDecl •

    $default  reduce using rule 4 (Decl)


State 13

    5 Decl: VarDecl •

    $default  reduce using rule 5 (Decl)


State 14

    6 Decl: StmtList •

    $default  reduce using rule 6 (Decl)


State 15

   11 StmtList: Stmt • StmtList

    ID               shift, and go to state 2
    SEMICOLON        shift, and go to state 3
    MINUS            shift, and go to state 4
    LEFTPARENTHESIS  shift, and go to state 5
    UNARYNOT         shift, and go to state 6
    NUMBER           shift, and go to state 7

    ID               [reduce using rule 10 (StmtList)]
    SEMICOLON        [reduce using rule 10 (StmtList)]
    MINUS            [reduce using rule 10 (StmtList)]
    LEFTPARENTHESIS  [reduce using rule 10 (StmtList)]
    UNARYNOT         [reduce using rule 10 (StmtList)]
    NUMBER           [reduce using rule 10 (StmtList)]
    $default         reduce using rule 10 (StmtList)

    StmtList  go to state 25
    Stmt      go to state 15
    Primary   go to state 16
    Expr      go to state 17
    UnaryOp   go to state 18


State 16

   18 Expr: Primary •

    $default  reduce using rule 18 (Expr)


State 17

   13 Stmt: Expr • SEMICOLON
   19 Expr: Expr • PLUS Expr
   20     | Expr • MINUS Expr
   21     | Expr • MULTIPLY Expr
   22     | Expr • DIVIDE Expr

    SEMICOLON  shift, and go to state 26
    PLUS       shift, and go to state 27
    MINUS      shift, and go to state 28
    MULTIPLY   shift, and go to state 29
    DIVIDE     shift, and go to state 30


State 18

   23 Expr: UnaryOp • Expr

    ID               shift, and go to state 2
    MINUS            shift, and go to state 4
    LEFTPARENTHESIS  shift, and go to state 5
    UNARYNOT         shift, and go to state 6
    NUMBER           shift, and go to state 7

    Primary  go to state 16
    Expr     go to state 31
    UnaryOp  go to state 18


State 19

    9 VarDecl: TYPE ID • SEMICOLON

    SEMICOLON  shift, and go to state 32


State 20

   24 Expr: ID EQUAL • Expr

    ID               shift, and go to state 2
    MINUS            shift, and go to state 4
    LEFTPARENTHESIS  shift, and go to state 5
    UNARYNOT         shift, and go to state 6
    NUMBER           shift, and go to state 7

    Primary  go to state 16
    Expr     go to state 33
    UnaryOp  go to state 18


State 21

   17 Primary: LEFTPARENTHESIS Expr • RIGHTPARENTHESIS
   19 Expr: Expr • PLUS Expr
   20     | Expr • MINUS Expr
   21     | Expr • MULTIPLY Expr
   22     | Expr • DIVIDE Expr

    PLUS              shift, and go to state 27
    MINUS             shift, and go to state 28
    MULTIPLY          shift, and go to state 29
    DIVIDE            shift, and go to state 30
    RIGHTPARENTHESIS  shift, and go to state 34


State 22

    8 FunDecl: FUN TYPE • ID $@1 LEFTPARENTHESIS RIGHTPARENTHESIS Block

    ID  shift, and go to state 35


State 23

    0 $accept: Program $end •

    $default  accept


State 24

    2 DeclList: Decl DeclList •

    $default  reduce using rule 2 (DeclList)


State 25

   11 StmtList: Stmt StmtList •

    $default  reduce using rule 11 (StmtList)


State 26

   13 Stmt: Expr SEMICOLON •

    $default  reduce using rule 13 (Stmt)


State 27

   19 Expr: Expr PLUS • Expr

    ID               shift, and go to state 2
    MINUS            shift, and go to state 4
    LEFTPARENTHESIS  shift, and go to state 5
    UNARYNOT         shift, and go to state 6
    NUMBER           shift, and go to state 7

    Primary  go to state 16
    Expr     go to state 36
    UnaryOp  go to state 18


State 28

   20 Expr: Expr MINUS • Expr

    ID               shift, and go to state 2
    MINUS            shift, and go to state 4
    LEFTPARENTHESIS  shift, and go to state 5
    UNARYNOT         shift, and go to state 6
    NUMBER           shift, and go to state 7

    Primary  go to state 16
    Expr     go to state 37
    UnaryOp  go to state 18


State 29

   21 Expr: Expr MULTIPLY • Expr

    ID               shift, and go to state 2
    MINUS            shift, and go to state 4
    LEFTPARENTHESIS  shift, and go to state 5
    UNARYNOT         shift, and go to state 6
    NUMBER           shift, and go to state 7

    Primary  go to state 16
    Expr     go to state 38
    UnaryOp  go to state 18


State 30

   22 Expr: Expr DIVIDE • Expr

    ID               shift, and go to state 2
    MINUS            shift, and go to state 4
    LEFTPARENTHESIS  shift, and go to state 5
    UNARYNOT         shift, and go to state 6
    NUMBER           shift, and go to state 7

    Primary  go to state 16
    Expr     go to state 39
    UnaryOp  go to state 18


State 31

   19 Expr: Expr • PLUS Expr
   20     | Expr • MINUS Expr
   21     | Expr • MULTIPLY Expr
   22     | Expr • DIVIDE Expr
   23     | UnaryOp Expr •

    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30

    PLUS      [reduce using rule 23 (Expr)]
    MINUS     [reduce using rule 23 (Expr)]
    MULTIPLY  [reduce using rule 23 (Expr)]
    DIVIDE    [reduce using rule 23 (Expr)]
    $default  reduce using rule 23 (Expr)


State 32

    9 VarDecl: TYPE ID SEMICOLON •

    $default  reduce using rule 9 (VarDecl)


State 33

   19 Expr: Expr • PLUS Expr
   20     | Expr • MINUS Expr
   21     | Expr • MULTIPLY Expr
   22     | Expr • DIVIDE Expr
   24     | ID EQUAL Expr •

    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30

    PLUS      [reduce using rule 24 (Expr)]
    MINUS     [reduce using rule 24 (Expr)]
    MULTIPLY  [reduce using rule 24 (Expr)]
    DIVIDE    [reduce using rule 24 (Expr)]
    $default  reduce using rule 24 (Expr)


State 34

   17 Primary: LEFTPARENTHESIS Expr RIGHTPARENTHESIS •

    $default  reduce using rule 17 (Primary)


State 35

    8 FunDecl: FUN TYPE ID • $@1 LEFTPARENTHESIS RIGHTPARENTHESIS Block

    $default  reduce using rule 7 ($@1)

    $@1  go to state 40


State 36

   19 Expr: Expr • PLUS Expr
   19     | Expr PLUS Expr •
   20     | Expr • MINUS Expr
   21     | Expr • MULTIPLY Expr
   22     | Expr • DIVIDE Expr

    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30

    PLUS      [reduce using rule 19 (Expr)]
    MINUS     [reduce using rule 19 (Expr)]
    MULTIPLY  [reduce using rule 19 (Expr)]
    DIVIDE    [reduce using rule 19 (Expr)]
    $default  reduce using rule 19 (Expr)


State 37

   19 Expr: Expr • PLUS Expr
   20     | Expr • MINUS Expr
   20     | Expr MINUS Expr •
   21     | Expr • MULTIPLY Expr
   22     | Expr • DIVIDE Expr

    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30

    PLUS      [reduce using rule 20 (Expr)]
    MINUS     [reduce using rule 20 (Expr)]
    MULTIPLY  [reduce using rule 20 (Expr)]
    DIVIDE    [reduce using rule 20 (Expr)]
    $default  reduce using rule 20 (Expr)


State 38

   19 Expr: Expr • PLUS Expr
   20     | Expr • MINUS Expr
   21     | Expr • MULTIPLY Expr
   21     | Expr MULTIPLY Expr •
   22     | Expr • DIVIDE Expr

    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30

    PLUS      [reduce using rule 21 (Expr)]
    MINUS     [reduce using rule 21 (Expr)]
    MULTIPLY  [reduce using rule 21 (Expr)]
    DIVIDE    [reduce using rule 21 (Expr)]
    $default  reduce using rule 21 (Expr)


State 39

   19 Expr: Expr • PLUS Expr
   20     | Expr • MINUS Expr
   21     | Expr • MULTIPLY Expr
   22     | Expr • DIVIDE Expr
   22     | Expr DIVIDE Expr •

    PLUS      shift, and go to state 27
    MINUS     shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIVIDE    shift, and go to state 30

    PLUS      [reduce using rule 22 (Expr)]
    MINUS     [reduce using rule 22 (Expr)]
    MULTIPLY  [reduce using rule 22 (Expr)]
    DIVIDE    [reduce using rule 22 (Expr)]
    $default  reduce using rule 22 (Expr)


State 40

    8 FunDecl: FUN TYPE ID $@1 • LEFTPARENTHESIS RIGHTPARENTHESIS Block

    LEFTPARENTHESIS  shift, and go to state 41


State 41

    8 FunDecl: FUN TYPE ID $@1 LEFTPARENTHESIS • RIGHTPARENTHESIS Block

    RIGHTPARENTHESIS  shift, and go to state 42


State 42

    8 FunDecl: FUN TYPE ID $@1 LEFTPARENTHESIS RIGHTPARENTHESIS • Block

    LEFTCURLYBRACKET  shift, and go to state 43

    Block  go to state 44


State 43

   14 Block: LEFTCURLYBRACKET • DeclList StmtList RIGHCURLYBRACKET

    TYPE             shift, and go to state 1
    ID               shift, and go to state 2
    SEMICOLON        shift, and go to state 3
    MINUS            shift, and go to state 4
    LEFTPARENTHESIS  shift, and go to state 5
    UNARYNOT         shift, and go to state 6
    NUMBER           shift, and go to state 7
    FUN              shift, and go to state 8

    TYPE             [reduce using rule 10 (StmtList)]
    ID               [reduce using rule 10 (StmtList)]
    SEMICOLON        [reduce using rule 10 (StmtList)]
    MINUS            [reduce using rule 10 (StmtList)]
    LEFTPARENTHESIS  [reduce using rule 10 (StmtList)]
    UNARYNOT         [reduce using rule 10 (StmtList)]
    NUMBER           [reduce using rule 10 (StmtList)]
    FUN              [reduce using rule 10 (StmtList)]
    $default         reduce using rule 10 (StmtList)

    DeclList  go to state 45
    Decl      go to state 11
    FunDecl   go to state 12
    VarDecl   go to state 13
    StmtList  go to state 14
    Stmt      go to state 15
    Primary   go to state 16
    Expr      go to state 17
    UnaryOp   go to state 18


State 44

    8 FunDecl: FUN TYPE ID $@1 LEFTPARENTHESIS RIGHTPARENTHESIS Block •

    $default  reduce using rule 8 (FunDecl)


State 45

   14 Block: LEFTCURLYBRACKET DeclList • StmtList RIGHCURLYBRACKET

    ID               shift, and go to state 2
    SEMICOLON        shift, and go to state 3
    MINUS            shift, and go to state 4
    LEFTPARENTHESIS  shift, and go to state 5
    UNARYNOT         shift, and go to state 6
    NUMBER           shift, and go to state 7

    $default  reduce using rule 10 (StmtList)

    StmtList  go to state 46
    Stmt      go to state 15
    Primary   go to state 16
    Expr      go to state 17
    UnaryOp   go to state 18


State 46

   14 Block: LEFTCURLYBRACKET DeclList StmtList • RIGHCURLYBRACKET

    RIGHCURLYBRACKET  shift, and go to state 47


State 47

   14 Block: LEFTCURLYBRACKET DeclList StmtList RIGHCURLYBRACKET •

    $default  reduce using rule 14 (Block)
