Nonterminals useless in grammar

    Primary
    UnaryOp
    BinaryOp


Terminals unused in grammar

    RETURN
    COMMA
    UNARYNOT
    LOGICALAND
    LOGICALOR
    WRITE


Rules useless in grammar

   24 Primary: ID
   25        | NUMBER
   26        | LEFTPARENTHESIS Expr RIGHTPARENTHESIS

   27 UnaryOp: MINUS
   28        | UNARYNOT

   29 BinaryOp: PLUS
   30         | MINUS
   31         | MULTIPLY
   32         | DIVIDE
   33         | LOGICALAND
   34         | LOGICALOR


State 0 conflicts: 6 shift/reduce
State 9 conflicts: 6 shift/reduce, 6 reduce/reduce
State 11 conflicts: 4 shift/reduce
State 30 conflicts: 4 shift/reduce
State 45 conflicts: 4 shift/reduce
State 47 conflicts: 6 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: FunDecl
    5     | VarDecl
    6     | StmtList

    7 StmtList: ε
    8         | Stmt StmtList

    9 Stmt: SEMICOLON
   10     | Expr SEMICOLON

   11 $@1: ε

   12 FunDecl: FUN TYPE ID $@1 LEFTPARENTHESIS RIGHTPARENTHESIS Block

   13 Block: LEFTCURLYBRACKET DeclList StmtList RIGHCURLYBRACKET

   14 VarDecl: TYPE ID SEMICOLON
   15        | TYPE ID LEFTBRACKET NUMBER RIGHTBRACKET SEMICOLON

   16 Expr: NUMBER
   17     | ID EQUAL Expr
   18     | Expr PLUS Expr
   19     | Expr MINUS Expr
   20     | Expr MULTIPLY Expr
   21     | Expr DIVIDE Expr
   22     | LEFTPARENTHESIS Expr RIGHTPARENTHESIS
   23     | ID LEFTBRACKET NUMBER RIGHTBRACKET EQUAL Expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPE <string> (258) 12 14 15
    ID <string> (259) 12 14 15 17 23
    RETURN <string> (260)
    SEMICOLON <character> (261) 9 10 14 15
    COMMA <character> (262)
    EQUAL <character> (263) 17 23
    PLUS <character> (264) 18
    MINUS <character> (265) 19
    MULTIPLY <character> (266) 20
    DIVIDE <character> (267) 21
    LEFTPARENTHESIS <character> (268) 12 22
    RIGHTPARENTHESIS <character> (269) 12 22
    LEFTCURLYBRACKET <character> (270) 13
    RIGHCURLYBRACKET <character> (271) 13
    LEFTBRACKET <character> (272) 15 23
    RIGHTBRACKET <character> (273) 15 23
    UNARYNOT <character> (274)
    LOGICALAND <string> (275)
    LOGICALOR <string> (276)
    NUMBER <string> (277) 15 16 23
    WRITE <string> (278)
    FUN <string> (279) 12


Nonterminals, with rules where they appear

    $accept (25)
        on left: 0
    Program <ast> (26)
        on left: 1
        on right: 0
    DeclList <ast> (27)
        on left: 2 3
        on right: 1 2 13
    Decl <ast> (28)
        on left: 4 5 6
        on right: 2 3
    StmtList <ast> (29)
        on left: 7 8
        on right: 6 8 13
    Stmt <ast> (30)
        on left: 9 10
        on right: 8
    FunDecl <ast> (31)
        on left: 12
        on right: 4
    $@1 (32)
        on left: 11
        on right: 12
    Block (33)
        on left: 13
        on right: 12
    VarDecl <ast> (34)
        on left: 14 15
        on right: 5
    Expr <ast> (35)
        on left: 16 17 18 19 20 21 22 23
        on right: 10 17 18 19 20 21 22 23


State 0

    0 $accept: • Program $end

    TYPE             shift, and go to state 1
    ID               shift, and go to state 2
    SEMICOLON        shift, and go to state 3
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5
    FUN              shift, and go to state 6

    TYPE             [reduce using rule 7 (StmtList)]
    ID               [reduce using rule 7 (StmtList)]
    SEMICOLON        [reduce using rule 7 (StmtList)]
    LEFTPARENTHESIS  [reduce using rule 7 (StmtList)]
    NUMBER           [reduce using rule 7 (StmtList)]
    FUN              [reduce using rule 7 (StmtList)]
    $default         reduce using rule 7 (StmtList)

    Program   go to state 7
    DeclList  go to state 8
    Decl      go to state 9
    StmtList  go to state 10
    Stmt      go to state 11
    FunDecl   go to state 12
    VarDecl   go to state 13
    Expr      go to state 14


State 1

   14 VarDecl: TYPE • ID SEMICOLON
   15        | TYPE • ID LEFTBRACKET NUMBER RIGHTBRACKET SEMICOLON

    ID  shift, and go to state 15


State 2

   17 Expr: ID • EQUAL Expr
   23     | ID • LEFTBRACKET NUMBER RIGHTBRACKET EQUAL Expr

    EQUAL        shift, and go to state 16
    LEFTBRACKET  shift, and go to state 17


State 3

    9 Stmt: SEMICOLON •

    $default  reduce using rule 9 (Stmt)


State 4

   22 Expr: LEFTPARENTHESIS • Expr RIGHTPARENTHESIS

    ID               shift, and go to state 2
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    Expr  go to state 18


State 5

   16 Expr: NUMBER •

    $default  reduce using rule 16 (Expr)


State 6

   12 FunDecl: FUN • TYPE ID $@1 LEFTPARENTHESIS RIGHTPARENTHESIS Block

    TYPE  shift, and go to state 19


State 7

    0 $accept: Program • $end

    $end  shift, and go to state 20


State 8

    1 Program: DeclList •

    $default  reduce using rule 1 (Program)


State 9

    2 DeclList: Decl • DeclList
    3         | Decl •

    TYPE             shift, and go to state 1
    ID               shift, and go to state 2
    SEMICOLON        shift, and go to state 3
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5
    FUN              shift, and go to state 6

    $end              reduce using rule 3 (DeclList)
    $end              [reduce using rule 7 (StmtList)]
    TYPE              [reduce using rule 7 (StmtList)]
    ID                [reduce using rule 3 (DeclList)]
    ID                [reduce using rule 7 (StmtList)]
    SEMICOLON         [reduce using rule 3 (DeclList)]
    SEMICOLON         [reduce using rule 7 (StmtList)]
    LEFTPARENTHESIS   [reduce using rule 3 (DeclList)]
    LEFTPARENTHESIS   [reduce using rule 7 (StmtList)]
    RIGHCURLYBRACKET  reduce using rule 3 (DeclList)
    RIGHCURLYBRACKET  [reduce using rule 7 (StmtList)]
    NUMBER            [reduce using rule 3 (DeclList)]
    NUMBER            [reduce using rule 7 (StmtList)]
    FUN               [reduce using rule 7 (StmtList)]
    $default          reduce using rule 3 (DeclList)

    DeclList  go to state 21
    Decl      go to state 9
    StmtList  go to state 10
    Stmt      go to state 11
    FunDecl   go to state 12
    VarDecl   go to state 13
    Expr      go to state 14


State 10

    6 Decl: StmtList •

    $default  reduce using rule 6 (Decl)


State 11

    8 StmtList: Stmt • StmtList

    ID               shift, and go to state 2
    SEMICOLON        shift, and go to state 3
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    ID               [reduce using rule 7 (StmtList)]
    SEMICOLON        [reduce using rule 7 (StmtList)]
    LEFTPARENTHESIS  [reduce using rule 7 (StmtList)]
    NUMBER           [reduce using rule 7 (StmtList)]
    $default         reduce using rule 7 (StmtList)

    StmtList  go to state 22
    Stmt      go to state 11
    Expr      go to state 14


State 12

    4 Decl: FunDecl •

    $default  reduce using rule 4 (Decl)


State 13

    5 Decl: VarDecl •

    $default  reduce using rule 5 (Decl)


State 14

   10 Stmt: Expr • SEMICOLON
   18 Expr: Expr • PLUS Expr
   19     | Expr • MINUS Expr
   20     | Expr • MULTIPLY Expr
   21     | Expr • DIVIDE Expr

    SEMICOLON  shift, and go to state 23
    PLUS       shift, and go to state 24
    MINUS      shift, and go to state 25
    MULTIPLY   shift, and go to state 26
    DIVIDE     shift, and go to state 27


State 15

   14 VarDecl: TYPE ID • SEMICOLON
   15        | TYPE ID • LEFTBRACKET NUMBER RIGHTBRACKET SEMICOLON

    SEMICOLON    shift, and go to state 28
    LEFTBRACKET  shift, and go to state 29


State 16

   17 Expr: ID EQUAL • Expr

    ID               shift, and go to state 2
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    Expr  go to state 30


State 17

   23 Expr: ID LEFTBRACKET • NUMBER RIGHTBRACKET EQUAL Expr

    NUMBER  shift, and go to state 31


State 18

   18 Expr: Expr • PLUS Expr
   19     | Expr • MINUS Expr
   20     | Expr • MULTIPLY Expr
   21     | Expr • DIVIDE Expr
   22     | LEFTPARENTHESIS Expr • RIGHTPARENTHESIS

    PLUS              shift, and go to state 24
    MINUS             shift, and go to state 25
    MULTIPLY          shift, and go to state 26
    DIVIDE            shift, and go to state 27
    RIGHTPARENTHESIS  shift, and go to state 32


State 19

   12 FunDecl: FUN TYPE • ID $@1 LEFTPARENTHESIS RIGHTPARENTHESIS Block

    ID  shift, and go to state 33


State 20

    0 $accept: Program $end •

    $default  accept


State 21

    2 DeclList: Decl DeclList •

    $default  reduce using rule 2 (DeclList)


State 22

    8 StmtList: Stmt StmtList •

    $default  reduce using rule 8 (StmtList)


State 23

   10 Stmt: Expr SEMICOLON •

    $default  reduce using rule 10 (Stmt)


State 24

   18 Expr: Expr PLUS • Expr

    ID               shift, and go to state 2
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    Expr  go to state 34


State 25

   19 Expr: Expr MINUS • Expr

    ID               shift, and go to state 2
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    Expr  go to state 35


State 26

   20 Expr: Expr MULTIPLY • Expr

    ID               shift, and go to state 2
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    Expr  go to state 36


State 27

   21 Expr: Expr DIVIDE • Expr

    ID               shift, and go to state 2
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    Expr  go to state 37


State 28

   14 VarDecl: TYPE ID SEMICOLON •

    $default  reduce using rule 14 (VarDecl)


State 29

   15 VarDecl: TYPE ID LEFTBRACKET • NUMBER RIGHTBRACKET SEMICOLON

    NUMBER  shift, and go to state 38


State 30

   17 Expr: ID EQUAL Expr •
   18     | Expr • PLUS Expr
   19     | Expr • MINUS Expr
   20     | Expr • MULTIPLY Expr
   21     | Expr • DIVIDE Expr

    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25
    MULTIPLY  shift, and go to state 26
    DIVIDE    shift, and go to state 27

    PLUS      [reduce using rule 17 (Expr)]
    MINUS     [reduce using rule 17 (Expr)]
    MULTIPLY  [reduce using rule 17 (Expr)]
    DIVIDE    [reduce using rule 17 (Expr)]
    $default  reduce using rule 17 (Expr)


State 31

   23 Expr: ID LEFTBRACKET NUMBER • RIGHTBRACKET EQUAL Expr

    RIGHTBRACKET  shift, and go to state 39


State 32

   22 Expr: LEFTPARENTHESIS Expr RIGHTPARENTHESIS •

    $default  reduce using rule 22 (Expr)


State 33

   12 FunDecl: FUN TYPE ID • $@1 LEFTPARENTHESIS RIGHTPARENTHESIS Block

    $default  reduce using rule 11 ($@1)

    $@1  go to state 40


State 34

   18 Expr: Expr • PLUS Expr
   18     | Expr PLUS Expr •
   19     | Expr • MINUS Expr
   20     | Expr • MULTIPLY Expr
   21     | Expr • DIVIDE Expr

    MULTIPLY  shift, and go to state 26
    DIVIDE    shift, and go to state 27

    $default  reduce using rule 18 (Expr)


State 35

   18 Expr: Expr • PLUS Expr
   19     | Expr • MINUS Expr
   19     | Expr MINUS Expr •
   20     | Expr • MULTIPLY Expr
   21     | Expr • DIVIDE Expr

    MULTIPLY  shift, and go to state 26
    DIVIDE    shift, and go to state 27

    $default  reduce using rule 19 (Expr)


State 36

   18 Expr: Expr • PLUS Expr
   19     | Expr • MINUS Expr
   20     | Expr • MULTIPLY Expr
   20     | Expr MULTIPLY Expr •
   21     | Expr • DIVIDE Expr

    $default  reduce using rule 20 (Expr)


State 37

   18 Expr: Expr • PLUS Expr
   19     | Expr • MINUS Expr
   20     | Expr • MULTIPLY Expr
   21     | Expr • DIVIDE Expr
   21     | Expr DIVIDE Expr •

    $default  reduce using rule 21 (Expr)


State 38

   15 VarDecl: TYPE ID LEFTBRACKET NUMBER • RIGHTBRACKET SEMICOLON

    RIGHTBRACKET  shift, and go to state 41


State 39

   23 Expr: ID LEFTBRACKET NUMBER RIGHTBRACKET • EQUAL Expr

    EQUAL  shift, and go to state 42


State 40

   12 FunDecl: FUN TYPE ID $@1 • LEFTPARENTHESIS RIGHTPARENTHESIS Block

    LEFTPARENTHESIS  shift, and go to state 43


State 41

   15 VarDecl: TYPE ID LEFTBRACKET NUMBER RIGHTBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 44


State 42

   23 Expr: ID LEFTBRACKET NUMBER RIGHTBRACKET EQUAL • Expr

    ID               shift, and go to state 2
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    Expr  go to state 45


State 43

   12 FunDecl: FUN TYPE ID $@1 LEFTPARENTHESIS • RIGHTPARENTHESIS Block

    RIGHTPARENTHESIS  shift, and go to state 46


State 44

   15 VarDecl: TYPE ID LEFTBRACKET NUMBER RIGHTBRACKET SEMICOLON •

    $default  reduce using rule 15 (VarDecl)


State 45

   18 Expr: Expr • PLUS Expr
   19     | Expr • MINUS Expr
   20     | Expr • MULTIPLY Expr
   21     | Expr • DIVIDE Expr
   23     | ID LEFTBRACKET NUMBER RIGHTBRACKET EQUAL Expr •

    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25
    MULTIPLY  shift, and go to state 26
    DIVIDE    shift, and go to state 27

    PLUS      [reduce using rule 23 (Expr)]
    MINUS     [reduce using rule 23 (Expr)]
    MULTIPLY  [reduce using rule 23 (Expr)]
    DIVIDE    [reduce using rule 23 (Expr)]
    $default  reduce using rule 23 (Expr)


State 46

   12 FunDecl: FUN TYPE ID $@1 LEFTPARENTHESIS RIGHTPARENTHESIS • Block

    LEFTCURLYBRACKET  shift, and go to state 47

    Block  go to state 48


State 47

   13 Block: LEFTCURLYBRACKET • DeclList StmtList RIGHCURLYBRACKET

    TYPE             shift, and go to state 1
    ID               shift, and go to state 2
    SEMICOLON        shift, and go to state 3
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5
    FUN              shift, and go to state 6

    TYPE             [reduce using rule 7 (StmtList)]
    ID               [reduce using rule 7 (StmtList)]
    SEMICOLON        [reduce using rule 7 (StmtList)]
    LEFTPARENTHESIS  [reduce using rule 7 (StmtList)]
    NUMBER           [reduce using rule 7 (StmtList)]
    FUN              [reduce using rule 7 (StmtList)]
    $default         reduce using rule 7 (StmtList)

    DeclList  go to state 49
    Decl      go to state 9
    StmtList  go to state 10
    Stmt      go to state 11
    FunDecl   go to state 12
    VarDecl   go to state 13
    Expr      go to state 14


State 48

   12 FunDecl: FUN TYPE ID $@1 LEFTPARENTHESIS RIGHTPARENTHESIS Block •

    $default  reduce using rule 12 (FunDecl)


State 49

   13 Block: LEFTCURLYBRACKET DeclList • StmtList RIGHCURLYBRACKET

    ID               shift, and go to state 2
    SEMICOLON        shift, and go to state 3
    LEFTPARENTHESIS  shift, and go to state 4
    NUMBER           shift, and go to state 5

    $default  reduce using rule 7 (StmtList)

    StmtList  go to state 50
    Stmt      go to state 11
    Expr      go to state 14


State 50

   13 Block: LEFTCURLYBRACKET DeclList StmtList • RIGHCURLYBRACKET

    RIGHCURLYBRACKET  shift, and go to state 51


State 51

   13 Block: LEFTCURLYBRACKET DeclList StmtList RIGHCURLYBRACKET •

    $default  reduce using rule 13 (Block)
